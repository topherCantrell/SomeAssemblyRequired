0001   0000                     .org 0
0002   0000             
0003   0000             ; Space Invaders (8080 code as if Z80)
0004   0000             ; Disassembly by Chris Cantrell 2006
0005   0000             
0006   0000             ; build-command tasm -b -t8580 invaders.asm invaders.bin
0007   0000             ; build-command java EpromTool -split invaders.bin invaders.h invaders.g invaders.f invaders.e
0008   0000             ; build-command jar -cf \mame\roms\invaders.zip invaders.h invaders.g invaders.f invaders.e
0009   0000             
0010   0000             
0011   0000             
0012   0000             ;<EditorTab name="Hardware">
0013   0000             
0014   0000             ; These are the ROMs on the board. The letter-extensions refer
0015   0000             ; to labels for chip rows on the silk screen.
0016   0000             
0017   0000             ; invaders.h 0000-07FF
0018   0000             ; invaders.g 0800-0FFF
0019   0000             ; invaders.f 1000-17FF
0020   0000             ; invaders.e 1800-1FFF
0021   0000             
0022   0000             ; Memory Map
0023   0000             ; 0000-1FFF   8K ROM
0024   0000             ; 2000-23FF   1K RAM
0025   0000             ; 2400-3FFF   7K Video RAM
0026   0000             
0027   0000             ;I/O ports:
0028   0000             ;read:
0029   0000             ;00        INPUTS (Mapped but never used by the code)
0030   0000             ;01        INPUTS
0031   0000             ;02        INPUTS
0032   0000             ;03        bit shift register read
0033   0000             ;write:
0034   0000             ;02        shift amount (3 bits)
0035   0000             ;03        sound bits
0036   0000             ;04        shift data
0037   0000             ;05        sound bits
0038   0000             ;06        watch-dog
0039   0000             ;07        * See below
0040   0000             
0041   0000             ; Dedicated shift hardware goes like this:
0042   0000             ; Write LSB of 16bit value to port 4
0043   0000             ; Write MSB of 16bit value to port 4
0044   0000             ; Write left-shift-amount to port 2
0045   0000             ; Read port 3 returns the upper byte of the 16bit value
0046   0000             ; after it has been shifted left N bits ? Could the upper bit be 
0047   0000             ; the sign ... left/right? TOPHER test this.
0048   0000             
0049   0000             ;IN port details
0050   0000             ;Port 0
0051   0000             ;   bit 0 DIP4 (Cocktail???)
0052   0000             ;   bit 1 Always 1
0053   0000             ;   bit 2 Always 1
0054   0000             ;   bit 3 Always 1
0055   0000             ;   bit 4 Fire
0056   0000             ;   bit 5 Left
0057   0000             ;   bit 6 Right
0058   0000             ;   bit 7 * See below
0059   0000             ;Port 1
0060   0000             ;   bit 0 = CREDIT (1 if deposit)
0061   0000             ;   bit 1 = 2P start (1 if pressed)
0062   0000             ;   bit 2 = 1P start (1 if pressed)
0063   0000             ;   bit 3 = Always 1
0064   0000             ;   bit 4 = 1P shot (1 if pressed)
0065   0000             ;   bit 5 = 1P left (1 if pressed)
0066   0000             ;   bit 6 = 1P right (1 if pressed)
0067   0000             ;   bit 7 = Not connected
0068   0000             ;Port 2
0069   0000             ;   bit 0 = DIP3 00 = 3 ships  10 = 5 ships
0070   0000             ;   bit 1 = DIP5 01 = 4 ships  11 = 6 ships
0071   0000             ;   bit 2 = Tilt
0072   0000             ;   bit 3 = DIP6 0 = extra ship at 1500, 1 = extra ship at 1000
0073   0000             ;   bit 4 = P2 shot (1 if pressed)
0074   0000             ;   bit 5 = P2 left (1 if pressed)
0075   0000             ;   bit 6 = P2 right (1 if pressed)
0076   0000             ;   bit 7 = DIP7 Coin info displayed in demo screen
0077   0000             ; Port 3
0078   0000             ;   bit0-7 Shift register data
0079   0000             
0080   0000             ; OUT port details
0081   0000             ;Port 2:
0082   0000             ;  bit 0,1,2 Shift amount
0083   0000             ;Port 3:
0084   0000             ;  bit 0=UFO (repeats)        SX0 0.raw
0085   0000             ;  bit 1=Shot                 SX1 1.raw
0086   0000             ;  bit 2=Flash (player die)   SX2 2.raw
0087   0000             ;  bit 3=Invader die          SX3 3.raw
0088   0000             ;  bit 4=Extended play        SX4
0089   0000             ;  bit 5= AMP enable          SX5
0090   0000             ;  bit 6= NC (not wired)
0091   0000             ;  bit 7= NC (not wired)
0092   0000             ;Port 4:
0093   0000             ;  bit 0-7 shift data (LSB on 1st write, MSB on 2nd)
0094   0000             ;Port 5:
0095   0000             ;  bit 0=Fleet movement 1     SX6 4.raw
0096   0000             ;  bit 1=Fleet movement 2     SX7 5.raw
0097   0000             ;  bit 2=Fleet movement 3     SX8 6.raw
0098   0000             ;  bit 3=Fleet movement 4     SX9 7.raw
0099   0000             ;  bit 4=UFO Hit              SX10 8.raw
0100   0000             ;  bit 5= NC
0101   0000             ;  bit 6= NC (not wired)
0102   0000             ;  bit 7= NC (not wired)
0103   0000             ;
0104   0000             ; * The decode for PORT7 is tied to the upper bit of port 0. This is
0105   0000             ;   strange since the PORTx pins do not assert unless there is
0106   0000             ;   a write ... and even then PORT7 wouldn't be active on accessing
0107   0000             ;   port 0. More reasearch here ...
0108   0000             ;   
0109   0000             ;Port 6:
0110   0000             ;  Watchdog ... read or write to reset
0111   0000             
0112   0000             ;</EditorTab>
0113   0000             
0114   0000             ;<EditorTab name="RAM Use">
0115   0000             
0116   0000             RAM_IsTilt           .equ   $209A  ; 1=handling tilt, 0=OK
0117   0000             RAM_NumCredits       .equ   $20EB  ; 99 is the max
0118   0000             RAM_SoundPortValue   .equ   $2094  ; Current value written to PORT-3
0119   0000             RAM_GPCounter        .equ   $20C0  ; Decremented in ISR ... used for timing
0120   0000             RAM_ActivePlayer     .equ   $2067  ; 0 (TOPHER player 1?) or 1 (TOPHER player 2?)
0121   0000             
0122   0000             RAM_ScoreDscP1       .equ   $20f8  ; 4 bytes (TOPHER which is really P1?)
0123   0000             RAM_ScoreDscP2       .equ   $20fc  ; 4 bytes ... TOPHER what do they mean>
0124   0000             
0125   0000             ;</EditorTab>
0126   0000             
0127   0000             ;=RST 0 (RESET) ===================================================
0128   0000 00                  nop     	; Interesting. Why waste the ...
0129   0001 00                  nop     	; ... CPU cycles with NOPs ? ...
0130   0002 00                  nop     	; ... Slow hardware?
0131   0003 C3 D4 18            jp      START	; Continue
0132   0006 00                  nop             ; Gap before next 8-byte RST slot
0133   0007 00                  nop             ; Gap before next 8-byte RST slot
0134   0008             
0135   0008             ;<EditorTab name="InterruptService">
0136   0008             ;=RST 1============================================================
0137   0008 F5                  push    af	; Save ...
0138   0009 C5                  push    bc	; ... everything
0139   000A D5                  push    de	; (Mirror of 0010)
0140   000B E5                  push    hl	; '
0141   000C C3 8C 00            jp      $L008C	; Continue
0142   000F 00                  nop             ; Gap before next 8-byte RST slot
0143   0010             
0144   0010             ;=RST 2============================================================
0145   0010 F5          L0010:  push    af		; Save ...
0146   0011 C5                  push    bc		; ... everything
0147   0012 D5                  push    de		; '
0148   0013 E5                  push    hl		; '
0149   0014 3E 80               ld      a,$80
0150   0016 32 72 20            ld      ($2072),a
0151   0019 21 C0 20            ld      hl,RAM_GPCounter	; General counter
0152   001C 35                  dec     (hl)		; Decrement
0153   001D CD CD 17            call    $L17CD
0154   0020 DB 01               in      a,($01)	        ; Read port 1
0155   0022 0F                  rrca    		; Bit0 into carry
0156   0023 DA 67 00            jp      c,$L0067	        ; Coin deposited ... handle it
0157   0026 3A EA 20            ld      a,($20ea)	; Credit need ...
0158   0029 A7                  and     a		; ... registering?
0159   002A CA 42 00            jp      z,$L0042	; No
0160   002D             ;
0161   002D             ; Handle bumping credit count
0162   002D             ;
0163   002D 3A EB 20            ld      a,(RAM_NumCredits)	; Number of credits
0164   0030 FE 99               cp      $99		; 99 credits already?
0165   0032 CA 3E 00            jp      z,$L003E	; Yes ... ignore this
0166   0035 C6 01               add     a,$01		; Bump number of credits
0167   0037 27                  daa     		; Make it decimal coded
0168   0038 32 EB 20            ld      (RAM_NumCredits),a	; New number of credits
0169   003B CD 47 19            call    $L1947		; Draw credits on screen
0170   003E AF          L003E:  xor     a		; Marke credit ...
0171   003F 32 EA 20    L003F:  ld      ($20ea),a	; ... as handled
0172   0042 3A E9 20    L0042:  ld      a,($20e9)	; Do we know about the ...
0173   0045 A7                  and     a		; ... player standing there?
0174   0046 CA 82 00            jp      z,$L0082	        ; Yes ... restore registers and out
0175   0049 3A EF 20            ld      a,($20ef)
0176   004C A7                  and     a
0177   004D C2 6F 00            jp      nz,$L006F
0178   0050 3A EB 20            ld      a,(RAM_NumCredits)
0179   0053 A7                  and     a
0180   0054 C2 5D 00            jp      nz,$L005D
0181   0057 CD BF 0A            call    $L0ABF
0182   005A C3 82 00            jp      $L0082		; Restore registers and out
0183   005D 3A 93 20    L005D:  ld      a,($2093)
0184   0060 A7                  and     a
0185   0061 C2 82 00            jp      nz,$L0082	; Restore registers and out
0186   0064 C3 65 07            jp      $L0765		; Begin the start-button wait loop
0187   0067             ;
0188   0067             ; Mark credit as needing registering
0189   0067 3E 01       L0067:  ld      a,$01		; Mark credit ...
0190   0069 32 EA 20            ld      ($20ea),a	; ... as needing registering
0191   006C C3 3F 00            jp      $L003F		; Go register it
0192   006F             ;
0193   006F CD 40 17    L006F:  call    $L1740
0194   0072 3A 32 20    L0072:  ld      a,($2032)
0195   0075 32 80 20            ld      ($2080),a
0196   0078 CD 00 01            call    $L0100          ; Draw Aliens
0197   007B CD 48 02            call    $L0248
0198   007E CD 13 09            call    $L0913
0199   0081 00                  nop     		; Why are we waiting?
0200   0082             ;
0201   0082 E1          L0082:  pop     hl		; Restore ...
0202   0083 D1                  pop     de		; ... everything
0203   0084 C1                  pop     bc		; '
0204   0085 F1                  pop     af		; '
0205   0086 FB                  ei      		; Enable interrupts
0206   0087 C9                  ret   			; Return from interrupt
0207   0088             ;</EditorTab>
0208   0088             
0209   0088 00                  nop
0210   0089 00                  nop
0211   008A 00                  nop
0212   008B 00                  nop
0213   008C             
0214   008C             ;<EditorTab name="ClockInterrupt">
0215   008C             ;=============================================================
0216   008C AF          L008C:  xor     a
0217   008D 32 72 20            ld      ($2072),a
0218   0090 3A E9 20            ld      a,($20e9)
0219   0093 A7                  and     a
0220   0094 CA 82 00            jp      z,$L0082	; Restore and return
0221   0097 3A EF 20            ld      a,($20ef)
0222   009A A7                  and     a
0223   009B C2 A5 00            jp      nz,$L00A5
0224   009E 3A C1 20            ld      a,($20c1)
0225   00A1 0F                  rrca
0226   00A2 D2 82 00            jp      nc,$L0082	; Restore and return
0227   00A5 21 20 20    L00A5:  ld      hl,$2020
0228   00A8 CD 4B 02            call    $L024B
0229   00AB CD 41 01            call    $L0141
0230   00AE C3 82 00            jp      $L0082		; Restore and return
0231   00B1             ;</EditorTab>
0232   00B1             
0233   00B1 CD 86 08    L00B1:  call    $L0886
0234   00B4 E5                  push    hl
0235   00B5 7E                  ld      a,(hl)
0236   00B6 23                  inc     hl
0237   00B7 66                  ld      h,(hl)
0238   00B8 6F                  ld      l,a
0239   00B9 22 09 20            ld      ($2009),hl
0240   00BC 22 0B 20            ld      ($200b),hl
0241   00BF E1                  pop     hl
0242   00C0 2B                  dec     hl
0243   00C1 7E                  ld      a,(hl)
0244   00C2 FE 03               cp      $03
0245   00C4 C2 C8 00            jp      nz,$L00C8
0246   00C7 3D                  dec     a
0247   00C8 32 08 20    L00C8:  ld      ($2008),a
0248   00CB FE FE               cp      $fe
0249   00CD 3E 00               ld      a,$00
0250   00CF C2 D3 00            jp      nz,$L00D3
0251   00D2 3C                  inc     a
0252   00D3 32 0D 20    L00D3:  ld      ($200d),a
0253   00D6 C9                  ret
0254   00D7             ;=============================================================
0255   00D7 3E 02       L00D7:  ld      a,$02
0256   00D9 32 FB 21            ld      ($21fb),a
0257   00DC 32 FB 22            ld      ($22fb),a
0258   00DF C3 E4 08            jp      $L08E4
0259   00E2             
0260   00E2             ; 00e2 - 00ff 00's
0261   00E2 00 00 00 00         .db     00,00,00,00,00,00,00,00,00,00,00,00,00,00
0261   00E6 00 00 00 00 
0261   00EA 00 00 00 00 
0261   00EE 00 00 
0262   00F0 00 00 00 00         .db     00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
0262   00F4 00 00 00 00 
0262   00F8 00 00 00 00 
0262   00FC 00 00 00 00 
0263   0100             
0264   0100             ;=============================================================
0265   0100             ;
0266   0100                     .org $100
0267   0100 21 02 20    L0100:  ld      hl,$2002
0268   0103 7E                  ld      a,(hl)
0269   0104 A7                  and     a
0270   0105 C2 38 15            jp      nz,$L1538
0271   0108 E5                  push    hl
0272   0109 3A 06 20            ld      a,($2006)
0273   010C 6F                  ld      l,a
0274   010D 3A 67 20            ld      a,(RAM_ActivePlayer)
0275   0110 67                  ld      h,a
0276   0111 7E                  ld      a,(hl)
0277   0112 A7                  and     a
0278   0113 E1                  pop     hl
0279   0114 CA 36 01            jp      z,$L0136	; Skip drawing sprite
0280   0117 23                  inc     hl		; Bump descriptor
0281   0118 23                  inc     hl		; Bump descriptor
0282   0119 7E                  ld      a,(hl)	; Get type (*2)
0283   011A 23                  inc     hl		; Bump descriptor
0284   011B 46                  ld      b,(hl)	; Get position indicator
0285   011C E6 FE               and     $fe		; Must be pre-shifted (mask lower bit)
0286   011E 07                  rlca  			; *2
0287   011F 07                  rlca    		; *4
0288   0120 07                  rlca    		; *8
0289   0121 5F                  ld      e,a		; Sprite's LSB
0290   0122 16 00               ld      d,$00		; Clear base MSB
0291   0124 21 00 1C            ld      hl,ROM_AlienSprites	; Position 0 alien sprites 
0292   0127 19                  add     hl,de		; Offset to sprite
0293   0128 EB                  ex      de,hl		; To DE
0294   0129 78                  ld      a,b		; Position indicator
0295   012A A7                  and     a		; Is it position 0?
0296   012B C4 3B 01            call    nz,$L013B	; No ... use Position 1 alien sprites
0297   012E 2A 0B 20            ld      hl,($200b)	; Pixel position
0298   0131 06 10               ld      b,$10		; 16 rows in alien sprites
0299   0133 CD D3 15            call    $L15D3		; Draw shifted sprite
0300   0136 AF          L0136:  xor     a		; Clear ...
0301   0137 32 00 20            ld      ($2000),a	; ... ? Flag ?
0302   013A C9                  ret     		; Out
0303   013B             ;
0304   013B 21 30 00    L013B:  ld      hl,$0030	; Offset sprites ... 
0305   013E 19                  add     hl,de		; ... to position 1 sprites
0306   013F EB                  ex      de,hl		; Back to DE
0307   0140 C9                  ret     		; Out
0308   0141             
0309   0141 3A 68 20    L0141:  ld      a,($2068)
0310   0144 A7                  and     a
0311   0145 C8                  ret     z
0312   0146 3A 00 20            ld      a,($2000)	; Check ? Flag ?
0313   0149 A7                  and     a		; Return if ...
0314   014A C0                  ret     nz		; ... not cleared by DrawAlienSprite
0315   014B 3A 67 20            ld      a,(RAM_ActivePlayer)
0316   014E 67                  ld      h,a
0317   014F 3A 06 20            ld      a,($2006)
0318   0152 16 02               ld      d,$02
0319   0154 3C          L0154:  inc     a
0320   0155 FE 37               cp      $37
0321   0157 CC A1 01            call    z,$L01A1
0322   015A 6F                  ld      l,a
0323   015B 46                  ld      b,(hl)
0324   015C 05                  dec     b
0325   015D C2 54 01            jp      nz,$L0154
0326   0160 32 06 20            ld      ($2006),a
0327   0163 CD 7A 01            call    $L017A
0328   0166 61                  ld      h,c
0329   0167 22 0B 20            ld      ($200b),hl
0330   016A 7D                  ld      a,l
0331   016B FE 28               cp      $28
0332   016D DA 71 19            jp      c,$L1971
0333   0170 7A                  ld      a,d
0334   0171 32 04 20            ld      ($2004),a
0335   0174 3E 01               ld      a,$01		; Set ...
0336   0176 32 00 20            ld      ($2000),a	; ... ? Flag ?
0337   0179 C9                  ret
0338   017A             
0339   017A 16 00       L017A:  ld      d,$00
0340   017C 7D                  ld      a,l
0341   017D 21 09 20            ld      hl,$2009
0342   0180 46                  ld      b,(hl)
0343   0181 23                  inc     hl
0344   0182 4E                  ld      c,(hl)
0345   0183 FE 0B       L0183:  cp      $0b
0346   0185 FA 94 01            jp      m,$L0194
0347   0188 DE 0B               sbc     a,$0b
0348   018A 5F                  ld      e,a
0349   018B 78                  ld      a,b
0350   018C C6 10               add     a,$10
0351   018E 47                  ld      b,a
0352   018F 7B                  ld      a,e
0353   0190 14                  inc     d
0354   0191 C3 83 01            jp      $L0183
0355   0194 68          L0194:  ld      l,b
0356   0195 A7          L0195:  and     a
0357   0196 C8                  ret     z
0358   0197 5F                  ld      e,a
0359   0198 79                  ld      a,c
0360   0199 C6 10               add     a,$10
0361   019B 4F                  ld      c,a
0362   019C 7B                  ld      a,e
0363   019D 3D                  dec     a
0364   019E C3 95 01            jp      $L0195
0365   01A1 15          L01A1:  dec     d
0366   01A2 CA CD 01            jp      z,$L01CD
0367   01A5 21 06 20            ld      hl,$2006
0368   01A8 36 00               ld      (hl),$00
0369   01AA 23                  inc     hl
0370   01AB 4E                  ld      c,(hl)
0371   01AC 36 00               ld      (hl),$00
0372   01AE CD D9 01            call    $L01D9
0373   01B1 21 05 20            ld      hl,$2005
0374   01B4 7E                  ld      a,(hl)
0375   01B5 3C                  inc     a
0376   01B6 E6 01               and     $01
0377   01B8 77                  ld      (hl),a
0378   01B9 AF                  xor     a
0379   01BA 21 67 20            ld      hl,RAM_ActivePlayer
0380   01BD 66                  ld      h,(hl)
0381   01BE C9                  ret
0382   01BF 00                  nop
0383   01C0 21 00 21    L01C0:  ld      hl,$2100
0384   01C3 06 37       L01C3:  ld      b,$37
0385   01C5 36 01       L01C5:  ld      (hl),$01
0386   01C7 23                  inc     hl
0387   01C8 05                  dec     b
0388   01C9 C2 C5 01            jp      nz,$L01C5
0389   01CC C9                  ret
0390   01CD E1          L01CD:  pop     hl
0391   01CE C9                  ret
0392   01CF 3E 01       L01CF:  ld      a,$01
0393   01D1 06 E0               ld      b,$e0
0394   01D3 21 02 24            ld      hl,$2402
0395   01D6 C3 CC 14            jp      $L14CC
0396   01D9 23          L01D9:  inc     hl
0397   01DA 46                  ld      b,(hl)
0398   01DB 23                  inc     hl
0399   01DC 79                  ld      a,c
0400   01DD 86                  add     a,(hl)
0401   01DE 77                  ld      (hl),a
0402   01DF 23                  inc     hl
0403   01E0 78                  ld      a,b
0404   01E1 86                  add     a,(hl)
0405   01E2 77                  ld      (hl),a
0406   01E3 C9                  ret
0407   01E4             
0408   01E4             ;=============================================================
0409   01E4             ; Block copy ROM mirror to initialize RAM
0410   01E4 06 C0       L01E4:  ld      b,$c0
0411   01E6             ;
0412   01E6 11 00 1B    L01E6:  ld      de,ROM_RAMInit	; RAM mirror in ROM 
0413   01E9 21 00 20            ld      hl,$2000	; Start of RAM
0414   01EC C3 32 1A            jp      BlockMoveDEtoHL		; Copy [DE]->[HL]and return
0415   01EF             
0416   01EF             ;=============================================================
0417   01EF 21 42 21    L01EF:  ld      hl,$2142
0418   01F2 C3 F8 01            jp      $L01F8
0419   01F5 21 42 22    L01F5:  ld      hl,$2242
0420   01F8 0E 04       L01F8:  ld      c,$04
0421   01FA 11 20 1D            ld      de,$1d20 ; -- POSSIBLE LABEL --
0422   01FD D5          L01FD:  push    de
0423   01FE 06 2C               ld      b,$2c
0424   0200 CD 32 1A            call    BlockMoveDEtoHL
0425   0203 D1                  pop     de
0426   0204 0D                  dec     c
0427   0205 C2 FD 01            jp      nz,$L01FD
0428   0208 C9                  ret
0429   0209             
0430   0209 3E 01       L0209:  ld      a,$01
0431   020B C3 1B 02            jp      $L021B
0432   020E             
0433   020E 3E 01       L020E:  ld      a,$01
0434   0210 C3 14 02            jp      $L0214
0435   0213             
0436   0213 AF          L0213:  xor     a
0437   0214 11 42 22    L0214:  ld      de,$2242
0438   0217 C3 1E 02            jp      $L021E
0439   021A             
0440   021A AF          L021A:  xor     a
0441   021B 11 42 21    L021B:  ld      de,$2142	; Sprites? In RAM?
0442   021E 32 81 20    L021E:  ld      ($2081),a
0443   0221 01 02 16            ld      bc,$1602	; 22 rows, 2 bytes/row
0444   0224 21 06 28            ld      hl,$2806	; Screen coordinates
0445   0227 3E 04               ld      a,$04
0446   0229 F5          L0229:  push    af
0447   022A C5                  push    bc
0448   022B 3A 81 20            ld      a,($2081)
0449   022E A7                  and     a
0450   022F C2 42 02            jp      nz,$L0242
0451   0232 CD 69 1A            call    $L1A69		; OR sprite onto screen
0452   0235 C1          L0235:  pop     bc
0453   0236 F1                  pop     af
0454   0237 3D                  dec     a
0455   0238 C8                  ret     z
0456   0239             
0457   0239 D5                  push    de
0458   023A 11 E0 02            ld      de,$02e0 
0459   023D 19                  add     hl,de
0460   023E D1                  pop     de
0461   023F C3 29 02            jp      $L0229
0462   0242             
0463   0242 CD 7C 14    L0242:  call    $L147C
0464   0245 C3 35 02            jp      $L0235
0465   0248 21 10 20    L0248:  ld      hl,$2010
0466   024B 7E          L024B:  ld      a,(hl)
0467   024C FE FF               cp      $ff
0468   024E C8                  ret     z
0469   024F FE FE               cp      $fe
0470   0251 CA 81 02            jp      z,$L0281
0471   0254 23                  inc     hl
0472   0255 46                  ld      b,(hl)
0473   0256 4F                  ld      c,a
0474   0257 B0                  or      b
0475   0258 79                  ld      a,c
0476   0259 C2 77 02            jp      nz,$L0277
0477   025C 23                  inc     hl
0478   025D 7E                  ld      a,(hl)
0479   025E A7                  and     a
0480   025F C2 88 02            jp      nz,$L0288
0481   0262 23                  inc     hl
0482   0263 5E                  ld      e,(hl)
0483   0264 23                  inc     hl
0484   0265 56                  ld      d,(hl)
0485   0266 E5                  push    hl
0486   0267 EB                  ex      de,hl
0487   0268 E5                  push    hl
0488   0269 21 6F 02            ld      hl,$026f ; -- POSSIBLE LABEL --
0489   026C E3                  ex      (sp),hl
0490   026D D5                  push    de
0491   026E E9                  jp      (hl)
0492   026F E1          L026F:  pop     hl
0493   0270 11 0C 00            ld      de,$000c ; -- POSSIBLE LABEL --
0494   0273 19                  add     hl,de
0495   0274 C3 4B 02            jp      $L024B
0496   0277 05          L0277:  dec     b
0497   0278 04                  inc     b
0498   0279 C2 7D 02            jp      nz,$L027D
0499   027C 3D                  dec     a
0500   027D 05          L027D:  dec     b
0501   027E 70                  ld      (hl),b
0502   027F 2B                  dec     hl
0503   0280 77                  ld      (hl),a
0504   0281 11 10 00    L0281:  ld      de,$0010 ; -- POSSIBLE LABEL --
0505   0284 19                  add     hl,de
0506   0285 C3 4B 02            jp      $L024B
0507   0288 35          L0288:  dec     (hl)
0508   0289 2B                  dec     hl
0509   028A 2B                  dec     hl
0510   028B C3 81 02            jp      $L0281
0511   028E E1                  pop     hl
0512   028F 23                  inc     hl
0513   0290 7E                  ld      a,(hl)
0514   0291 FE FF               cp      $ff
0515   0293 CA 3B 03            jp      z,$L033B
0516   0296 23                  inc     hl
0517   0297 35                  dec     (hl)
0518   0298 C0                  ret     nz
0519   0299             
0520   0299 47                  ld      b,a
0521   029A AF                  xor     a
0522   029B 32 68 20            ld      ($2068),a
0523   029E 32 69 20            ld      ($2069),a
0524   02A1 3E 30               ld      a,$30
0525   02A3 32 6A 20            ld      ($206a),a
0526   02A6 78                  ld      a,b
0527   02A7 36 05               ld      (hl),$05
0528   02A9 23                  inc     hl
0529   02AA 35                  dec     (hl)
0530   02AB C2 9B 03            jp      nz,$L039B	; Ship blowing up???
0531   02AE 2A 1A 20            ld      hl,($201a)
0532   02B1 06 10               ld      b,$10
0533   02B3 CD 24 14            call    $L1424
0534   02B6 21 10 20            ld      hl,$2010
0535   02B9 11 10 1B            ld      de,$1b10 ; -- POSSIBLE LABEL --
0536   02BC 06 10               ld      b,$10
0537   02BE CD 32 1A            call    BlockMoveDEtoHL
0538   02C1 06 00               ld      b,$00     ; Turn off EVERYTHING ...
0539   02C3 CD DC 19            call    TurnOffSounds   ; ... even the amp
0540   02C6 3A 6D 20            ld      a,($206d)
0541   02C9 A7                  and     a
0542   02CA C0                  ret     nz
0543   02CB             
0544   02CB 3A EF 20            ld      a,($20ef)
0545   02CE A7                  and     a
0546   02CF C8                  ret     z
0547   02D0             
0548   02D0 31 00 24            ld      sp,$2400
0549   02D3 FB                  ei
0550   02D4 CD D7 19            call    $L19D7
0551   02D7 CD 2E 09            call    $L092E
0552   02DA A7                  and     a
0553   02DB CA 6D 16            jp      z,$L166D
0554   02DE CD E7 18            call    $L18E7
0555   02E1 7E                  ld      a,(hl)
0556   02E2 A7                  and     a
0557   02E3 CA 2C 03            jp      z,$L032C
0558   02E6 3A CE 20            ld      a,($20ce)
0559   02E9 A7                  and     a
0560   02EA CA 2C 03            jp      z,$L032C
0561   02ED 3A 67 20    L02ED:  ld      a,(RAM_ActivePlayer)
0562   02F0 F5                  push    af
0563   02F1 0F                  rrca
0564   02F2 DA 32 03            jp      c,$L0332
0565   02F5 CD 0E 02            call    $L020E
0566   02F8 CD 78 08    L02F8:  call    $L0878
0567   02FB 73                  ld      (hl),e
0568   02FC 23                  inc     hl
0569   02FD 72                  ld      (hl),d
0570   02FE 2B                  dec     hl
0571   02FF 2B                  dec     hl
0572   0300 70                  ld      (hl),b
0573   0301 00                  nop
0574   0302 CD E4 01            call    $L01E4
0575   0305 F1                  pop     af
0576   0306 0F                  rrca
0577   0307 3E 21               ld      a,$21
0578   0309 06 00               ld      b,$00
0579   030B D2 12 03            jp      nc,$L0312
0580   030E 06 20               ld      b,$20
0581   0310 3E 22               ld      a,$22
0582   0312 32 67 20    L0312:  ld      (RAM_ActivePlayer),a
0583   0315 CD B6 0A            call    $L0AB6
0584   0318 AF                  xor     a
0585   0319 32 11 20            ld      ($2011),a
0586   031C 78                  ld      a,b
0587   031D D3 05               out     ($05),a	; Sound
0588   031F 3C                  inc     a
0589   0320 32 98 20            ld      ($2098),a
0590   0323 CD D6 09            call    $L09D6		; Clear center window
0591   0326 CD 7F 1A            call    $L1A7F		; Remove a ship and update indicators
0592   0329 C3 F9 07            jp      $L07F9
0593   032C             
0594   032C CD 7F 1A    L032C:  call    $L1A7F		; Remove a ship and update indicators
0595   032F C3 17 08            jp      $L0817
0596   0332 CD 09 02    L0332:  call    $L0209
0597   0335 C3 F8 02            jp      $L02F8
0598   0338             
0599   0338 00                  nop
0600   0339 00                  nop
0601   033A 00                  nop
0602   033B 21 68 20    L033B:  ld      hl,$2068
0603   033E 36 01               ld      (hl),$01
0604   0340 23                  inc     hl
0605   0341 7E                  ld      a,(hl)
0606   0342 A7                  and     a
0607   0343 C3 B0 03            jp      $L03B0
0608   0346             
0609   0346 00          L0346:  nop
0610   0347 2B                  dec     hl
0611   0348 36 01               ld      (hl),$01
0612   034A             ;
0613   034A 3A 1B 20    L034A:  ld      a,($201b)	; Current player coordinates
0614   034D 47                  ld      b,a		; Hold it
0615   034E 3A EF 20            ld      a,($20ef)	; Demo flag
0616   0351 A7                  and     a		; Demo = 0
0617   0352 C2 63 03            jp      nz,$L0363	; Use player controls
0618   0355             ; Demo is in control
0619   0355 3A 1D 20            ld      a,($201d)	; Get demo command
0620   0358 0F                  rrca    		; Is it right?
0621   0359 DA 81 03            jp      c,$L0381	; Yes ... do right
0622   035C 0F                  rrca    		; Is it left?
0623   035D DA 8E 03            jp      c,$L038E	; Yes ... do left
0624   0360 C3 6F 03            jp      $L036F		; Skip over movement
0625   0363             ;Player is in control
0626   0363 CD C0 17    L0363:  call    $L17C0		; Read active player controls
0627   0366 07                  rlca    		; Test for ...
0628   0367 07                  rlca    		; ... right button
0629   0368 DA 81 03            jp      c,$L0381	; Yes ... handle move right
0630   036B 07                  rlca    		; Test for left button
0631   036C DA 8E 03            jp      c,$L038E	; Yes ... handle move left
0632   036F             ;
0633   036F 21 18 20    L036F:  ld      hl,$2018	; Active player descriptor
0634   0372 CD 3B 1A            call    $L1A3B		; Load 5 bytes
0635   0375 CD 47 1A            call    $L1A47		; Convert to screen coordinates
0636   0378 CD 39 14            call    $L1439		; Display character
0637   037B 3E 00               ld      a,$00
0638   037D 32 12 20            ld      ($2012),a
0639   0380 C9                  ret
0640   0381             
0641   0381             ;=============================================================
0642   0381             ; Handle player moving right
0643   0381 78          L0381:  ld      a,b		; Player coordinate
0644   0382 FE D9               cp      $d9		; At right edge?
0645   0384 CA 6F 03            jp      z,$L036F	; Yes ... ignore this
0646   0387 3C                  inc     a		; Bump X coordinate
0647   0388 32 1B 20            ld      ($201b),a	; New X coordinate
0648   038B C3 6F 03            jp      $L036F		; Continue
0649   038E             
0650   038E             ;=============================================================
0651   038E             ; Handle player moving left
0652   038E 78          L038E:  ld      a,b		; Player coordinate
0653   038F FE 30               cp      $30		; At left edge
0654   0391 CA 6F 03            jp      z,$L036F	; Yes ... ignore this
0655   0394 3D                  dec     a		; Bump X coordinate
0656   0395 32 1B 20            ld      ($201b),a	; New X coordinate
0657   0398 C3 6F 03            jp      $L036F		; Continue
0658   039B             
0659   039B             ;=============================================================
0660   039B             ;
0661   039B 3C          L039B:  inc     a
0662   039C E6 01               and     $01
0663   039E 32 15 20            ld      ($2015),a
0664   03A1 07                  rlca    		; *2
0665   03A2 07                  rlca    		; *4
0666   03A3 07                  rlca    		; *8
0667   03A4 07                  rlca    		; *16
0668   03A5 21 70 1C            ld      hl,$1c70	; Player sprite location ; -- POSSIBLE LABEL --
0669   03A8 85                  add     a,l		; Offset sprite ...
0670   03A9 6F                  ld      l,a		; ... pointer
0671   03AA 22 18 20            ld      ($2018),hl	; New sprite
0672   03AD C3 6F 03            jp      $L036F		; Draw new sprite
0673   03B0             
0674   03B0 C2 4A 03    L03B0:  jp      nz,$L034A
0675   03B3 23                  inc     hl
0676   03B4 35                  dec     (hl)
0677   03B5 C2 4A 03            jp      nz,$L034A	; Move player's ship
0678   03B8 C3 46 03            jp      $L0346		; Dec HL, set to 1, and move player's ship
0679   03BB 11 2A 20            ld      de,$202a
0680   03BE CD 06 1A            call    $L1A06
0681   03C1 E1                  pop     hl
0682   03C2 D0                  ret     nc
0683   03C3             
0684   03C3 23                  inc     hl
0685   03C4 7E                  ld      a,(hl)
0686   03C5 A7                  and     a
0687   03C6 C8                  ret     z
0688   03C7             
0689   03C7 FE 01               cp      $01
0690   03C9 CA FA 03            jp      z,$L03FA
0691   03CC FE 02               cp      $02
0692   03CE CA 0A 04            jp      z,$L040A
0693   03D1 23                  inc     hl
0694   03D2 FE 03               cp      $03
0695   03D4 C2 2A 04            jp      nz,$L042A
0696   03D7 35                  dec     (hl)
0697   03D8 CA 36 04            jp      z,$L0436
0698   03DB 7E                  ld      a,(hl)
0699   03DC FE 0F               cp      $0f
0700   03DE C0                  ret     nz
0701   03DF             
0702   03DF E5                  push    hl
0703   03E0 CD 30 04            call    $L0430
0704   03E3 CD 52 14            call    $L1452
0705   03E6 E1                  pop     hl
0706   03E7 23                  inc     hl
0707   03E8 34                  inc     (hl)
0708   03E9 23                  inc     hl
0709   03EA 23                  inc     hl
0710   03EB 35                  dec     (hl)
0711   03EC 35                  dec     (hl)
0712   03ED 23                  inc     hl
0713   03EE 35                  dec     (hl)
0714   03EF 35                  dec     (hl)
0715   03F0 35                  dec     (hl)
0716   03F1 23                  inc     hl
0717   03F2 36 08               ld      (hl),$08
0718   03F4 CD 30 04            call    $L0430
0719   03F7 C3 00 14            jp      $L1400
0720   03FA 3C          L03FA:  inc     a
0721   03FB 77                  ld      (hl),a
0722   03FC 3A 1B 20            ld      a,($201b)
0723   03FF C6 08               add     a,$08
0724   0401 32 2A 20            ld      ($202a),a
0725   0404 CD 30 04            call    $L0430
0726   0407 C3 00 14            jp      $L1400
0727   040A CD 30 04    L040A:  call    $L0430
0728   040D D5                  push    de
0729   040E E5                  push    hl
0730   040F C5                  push    bc
0731   0410 CD 52 14            call    $L1452
0732   0413 C1                  pop     bc
0733   0414 E1                  pop     hl
0734   0415 D1                  pop     de
0735   0416 3A 2C 20            ld      a,($202c)
0736   0419 85                  add     a,l
0737   041A 6F                  ld      l,a
0738   041B 32 29 20            ld      ($2029),a
0739   041E CD 91 14            call    $L1491
0740   0421 3A 61 20            ld      a,($2061)
0741   0424 A7                  and     a
0742   0425 C8                  ret     z
0743   0426             
0744   0426 32 02 20            ld      ($2002),a
0745   0429 C9                  ret
0746   042A             
0747   042A FE 05       L042A:  cp      $05
0748   042C C8                  ret     z
0749   042D             
0750   042D C3 36 04            jp      $L0436
0751   0430 21 27 20    L0430:  ld      hl,$2027
0752   0433 C3 3B 1A            jp      $L1A3B
0753   0436 CD 30 04    L0436:  call    $L0430
0754   0439 CD 52 14            call    $L1452
0755   043C 21 25 20            ld      hl,$2025	; Active player shot descriptor
0756   043F 11 25 1B            ld      de,$1b25	; Initialize data ; -- POSSIBLE LABEL --
0757   0442 06 07               ld      b,$07		; 7 bytes
0758   0444 CD 32 1A            call    BlockMoveDEtoHL ; Initiate player shot descriptor
0759   0447 2A 8D 20            ld      hl,($208d)
0760   044A 2C                  inc     l
0761   044B 7D                  ld      a,l
0762   044C FE 63               cp      $63
0763   044E DA 53 04            jp      c,$L0453
0764   0451 2E 54               ld      l,$54
0765   0453 22 8D 20    L0453:  ld      ($208d),hl
0766   0456 2A 8F 20            ld      hl,($208f)
0767   0459 2C                  inc     l
0768   045A 22 8F 20            ld      ($208f),hl
0769   045D 3A 84 20            ld      a,($2084)
0770   0460 A7                  and     a
0771   0461 C0                  ret     nz
0772   0462             
0773   0462 7E                  ld      a,(hl)
0774   0463 E6 01               and     $01
0775   0465 01 29 02            ld      bc,$0229 ; -- POSSIBLE LABEL --
0776   0468 C2 6E 04            jp      nz,$L046E
0777   046B 01 E0 FE            ld      bc,$fee0
0778   046E 21 8A 20    L046E:  ld      hl,$208a
0779   0471 71                  ld      (hl),c
0780   0472 23                  inc     hl
0781   0473 23                  inc     hl
0782   0474 70                  ld      (hl),b
0783   0475 C9                  ret
0784   0476             
0785   0476 E1                  pop     hl
0786   0477 3A 32 1B            ld      a,($1b32) ; -- POSSIBLE LABEL --
0787   047A 32 32 20            ld      ($2032),a
0788   047D 2A 38 20            ld      hl,($2038)
0789   0480 7D                  ld      a,l
0790   0481 B4                  or      h
0791   0482 C2 8A 04            jp      nz,$L048A
0792   0485 2B                  dec     hl
0793   0486 22 38 20            ld      ($2038),hl
0794   0489 C9                  ret
0795   048A             
0796   048A 11 35 20    L048A:  ld      de,$2035
0797   048D 3E F9               ld      a,$f9
0798   048F CD 50 05            call    $L0550
0799   0492 3A 46 20            ld      a,($2046)
0800   0495 32 70 20            ld      ($2070),a
0801   0498 3A 56 20            ld      a,($2056)
0802   049B 32 71 20            ld      ($2071),a
0803   049E CD 63 05            call    $L0563
0804   04A1 3A 78 20            ld      a,($2078)
0805   04A4 A7                  and     a
0806   04A5 21 35 20            ld      hl,$2035
0807   04A8 C2 5B 05            jp      nz,$L055B
0808   04AB 11 30 1B            ld      de,$1b30 ; -- POSSIBLE LABEL --
0809   04AE 21 30 20            ld      hl,$2030
0810   04B1 06 10               ld      b,$10
0811   04B3 C3 32 1A            jp      BlockMoveDEtoHL
0812   04B6 E1                  pop     hl
0813   04B7 3A 6E 20            ld      a,($206e)
0814   04BA A7                  and     a
0815   04BB C0                  ret     nz
0816   04BC             
0817   04BC 3A 80 20            ld      a,($2080)
0818   04BF FE 01               cp      $01
0819   04C1 C0                  ret     nz
0820   04C2             
0821   04C2 11 45 20            ld      de,$2045
0822   04C5 3E ED               ld      a,$ed
0823   04C7 CD 50 05            call    $L0550
0824   04CA 3A 36 20            ld      a,($2036)
0825   04CD 32 70 20            ld      ($2070),a
0826   04D0 3A 56 20            ld      a,($2056)
0827   04D3 32 71 20            ld      ($2071),a
0828   04D6 CD 63 05            call    $L0563
0829   04D9 3A 76 20            ld      a,($2076)
0830   04DC FE 10               cp      $10
0831   04DE DA E7 04            jp      c,$L04E7
0832   04E1 3A 48 1B            ld      a,($1b48) ; -- POSSIBLE LABEL --
0833   04E4 32 76 20            ld      ($2076),a
0834   04E7 3A 78 20    L04E7:  ld      a,($2078)
0835   04EA A7                  and     a
0836   04EB 21 45 20            ld      hl,$2045
0837   04EE C2 5B 05            jp      nz,$L055B
0838   04F1 11 40 1B            ld      de,$1b40 ; -- POSSIBLE LABEL --
0839   04F4 21 40 20            ld      hl,$2040
0840   04F7 06 10               ld      b,$10
0841   04F9 CD 32 1A            call    BlockMoveDEtoHL
0842   04FC 3A 82 20            ld      a,($2082)	; Number of aliens on screen
0843   04FF 3D                  dec     a
0844   0500 C2 08 05            jp      nz,$L0508
0845   0503 3E 01               ld      a,$01
0846   0505 32 6E 20            ld      ($206e),a
0847   0508 2A 76 20    L0508:  ld      hl,($2076)
0848   050B C3 7E 06            jp      $L067E
0849   050E E1                  pop     hl
0850   050F 11 55 20    L050F:  ld      de,$2055
0851   0512 3E DB               ld      a,$db
0852   0514 CD 50 05            call    $L0550
0853   0517 3A 46 20            ld      a,($2046)
0854   051A 32 70 20            ld      ($2070),a
0855   051D 3A 36 20            ld      a,($2036)
0856   0520 32 71 20            ld      ($2071),a
0857   0523 CD 63 05            call    $L0563
0858   0526 3A 76 20            ld      a,($2076)
0859   0529 FE 15               cp      $15
0860   052B DA 34 05            jp      c,$L0534
0861   052E 3A 58 1B            ld      a,($1b58) ; -- POSSIBLE LABEL --
0862   0531 32 76 20            ld      ($2076),a
0863   0534 3A 78 20    L0534:  ld      a,($2078)
0864   0537 A7                  and     a
0865   0538 21 55 20            ld      hl,$2055
0866   053B C2 5B 05            jp      nz,$L055B
0867   053E 11 50 1B            ld      de,$1b50 ; -- POSSIBLE LABEL --
0868   0541 21 50 20            ld      hl,$2050
0869   0544 06 10               ld      b,$10
0870   0546 CD 32 1A            call    BlockMoveDEtoHL
0871   0549 2A 76 20            ld      hl,($2076)
0872   054C 22 58 20            ld      ($2058),hl
0873   054F C9                  ret
0874   0550             
0875   0550 32 7F 20    L0550:  ld      ($207f),a
0876   0553 21 73 20            ld      hl,$2073
0877   0556 06 0B               ld      b,$0b
0878   0558 C3 32 1A            jp      BlockMoveDEtoHL
0879   055B 11 73 20    L055B:  ld      de,$2073
0880   055E 06 0B               ld      b,$0b
0881   0560 C3 32 1A            jp      BlockMoveDEtoHL
0882   0563 21 73 20    L0563:  ld      hl,$2073
0883   0566 7E                  ld      a,(hl)
0884   0567 E6 80               and     $80
0885   0569 C2 C1 05            jp      nz,$L05C1
0886   056C 3A C1 20            ld      a,($20c1)
0887   056F FE 04               cp      $04
0888   0571 3A 69 20            ld      a,($2069)
0889   0574 CA B7 05            jp      z,$L05B7
0890   0577 A7                  and     a
0891   0578 C8                  ret     z
0892   0579             
0893   0579 23                  inc     hl
0894   057A 36 00               ld      (hl),$00
0895   057C 3A 70 20            ld      a,($2070)
0896   057F A7                  and     a
0897   0580 CA 89 05            jp      z,$L0589
0898   0583 47                  ld      b,a
0899   0584 3A CF 20            ld      a,($20cf)
0900   0587 B8                  cp      b
0901   0588 D0                  ret     nc
0902   0589             
0903   0589 3A 71 20    L0589:  ld      a,($2071)
0904   058C A7                  and     a
0905   058D CA 96 05            jp      z,$L0596
0906   0590 47                  ld      b,a
0907   0591 3A CF 20            ld      a,($20cf)
0908   0594 B8                  cp      b
0909   0595 D0                  ret     nc
0910   0596             
0911   0596 23          L0596:  inc     hl
0912   0597 7E                  ld      a,(hl)
0913   0598 A7                  and     a
0914   0599 CA 1B 06            jp      z,$L061B
0915   059C 2A 76 20            ld      hl,($2076)
0916   059F 4E                  ld      c,(hl)
0917   05A0 23                  inc     hl
0918   05A1 00                  nop
0919   05A2 22 76 20            ld      ($2076),hl
0920   05A5 CD 2F 06    L05A5:  call    $L062F
0921   05A8 D0                  ret     nc
0922   05A9             
0923   05A9 CD 7A 01            call    $L017A
0924   05AC 79                  ld      a,c
0925   05AD C6 07               add     a,$07
0926   05AF 67                  ld      h,a
0927   05B0 7D                  ld      a,l
0928   05B1 D6 0A               sub     $0a
0929   05B3 6F                  ld      l,a
0930   05B4 22 7B 20            ld      ($207b),hl
0931   05B7 21 73 20    L05B7:  ld      hl,$2073
0932   05BA 7E                  ld      a,(hl)
0933   05BB F6 80               or      $80
0934   05BD 77                  ld      (hl),a
0935   05BE 23                  inc     hl
0936   05BF 34                  inc     (hl)
0937   05C0 C9                  ret
0938   05C1             
0939   05C1 11 7C 20    L05C1:  ld      de,$207c
0940   05C4 CD 06 1A            call    $L1A06
0941   05C7 D0                  ret     nc
0942   05C8             
0943   05C8 23                  inc     hl
0944   05C9 7E                  ld      a,(hl)
0945   05CA E6 01               and     $01
0946   05CC C2 44 06            jp      nz,$L0644
0947   05CF 23                  inc     hl
0948   05D0 34                  inc     (hl)
0949   05D1 CD 75 06            call    $L0675
0950   05D4 3A 79 20            ld      a,($2079)
0951   05D7 C6 03               add     a,$03
0952   05D9 21 7F 20            ld      hl,$207f
0953   05DC BE                  cp      (hl)
0954   05DD DA E2 05            jp      c,$L05E2
0955   05E0 D6 0C               sub     $0c
0956   05E2 32 79 20    L05E2:  ld      ($2079),a
0957   05E5 3A 7B 20            ld      a,($207b)
0958   05E8 47                  ld      b,a
0959   05E9 3A 7E 20            ld      a,($207e)
0960   05EC 80                  add     a,b
0961   05ED 32 7B 20            ld      ($207b),a
0962   05F0 CD 6C 06            call    $L066C
0963   05F3 3A 7B 20            ld      a,($207b)
0964   05F6 FE 15               cp      $15
0965   05F8 DA 12 06            jp      c,$L0612
0966   05FB 3A 61 20            ld      a,($2061)
0967   05FE A7                  and     a
0968   05FF C8                  ret     z
0969   0600             
0970   0600 3A 7B 20    L0600:  ld      a,($207b)
0971   0603 FE 1E               cp      $1e
0972   0605 DA 12 06            jp      c,$L0612
0973   0608 FE 27               cp      $27
0974   060A 00                  nop
0975   060B D2 12 06            jp      nc,$L0612
0976   060E 97                  sub     a
0977   060F 32 15 20            ld      ($2015),a
0978   0612 3A 73 20    L0612:  ld      a,($2073)
0979   0615 F6 01               or      $01
0980   0617 32 73 20            ld      ($2073),a
0981   061A C9                  ret
0982   061B             
0983   061B 3A 1B 20    L061B:  ld      a,($201b)
0984   061E C6 08               add     a,$08
0985   0620 67                  ld      h,a
0986   0621 CD 6F 15            call    $L156F
0987   0624 79                  ld      a,c
0988   0625 FE 0C               cp      $0c
0989   0627 DA A5 05            jp      c,$L05A5
0990   062A 0E 0B               ld      c,$0b
0991   062C C3 A5 05            jp      $L05A5
0992   062F 0D          L062F:  dec     c
0993   0630 3A 67 20            ld      a,(RAM_ActivePlayer)
0994   0633 67                  ld      h,a
0995   0634 69                  ld      l,c
0996   0635 16 05               ld      d,$05
0997   0637 7E          L0637:  ld      a,(hl)
0998   0638 A7                  and     a
0999   0639 37                  scf
1000   063A C0                  ret     nz
1001   063B             
1002   063B 7D                  ld      a,l
1003   063C C6 0B               add     a,$0b
1004   063E 6F                  ld      l,a
1005   063F 15                  dec     d
1006   0640 C2 37 06            jp      nz,$L0637
1007   0643 C9                  ret
1008   0644             
1009   0644 21 78 20    L0644:  ld      hl,$2078
1010   0647 35                  dec     (hl)
1011   0648 7E                  ld      a,(hl)
1012   0649 FE 03               cp      $03
1013   064B C2 67 06            jp      nz,$L0667
1014   064E CD 75 06            call    $L0675
1015   0651 21 DC 1C            ld      hl,$1cdc ; -- POSSIBLE LABEL --
1016   0654 22 79 20            ld      ($2079),hl
1017   0657 21 7C 20            ld      hl,$207c
1018   065A 35                  dec     (hl)
1019   065B 35                  dec     (hl)
1020   065C 2B                  dec     hl
1021   065D 35                  dec     (hl)
1022   065E 35                  dec     (hl)
1023   065F 3E 06               ld      a,$06
1024   0661 32 7D 20            ld      ($207d),a
1025   0664 C3 6C 06            jp      $L066C
1026   0667 A7          L0667:  and     a
1027   0668 C0                  ret     nz
1028   0669             
1029   0669 C3 75 06            jp      $L0675
1030   066C 21 79 20    L066C:  ld      hl,$2079
1031   066F CD 3B 1A            call    $L1A3B
1032   0672 C3 91 14            jp      $L1491
1033   0675 21 79 20    L0675:  ld      hl,$2079
1034   0678 CD 3B 1A            call    $L1A3B
1035   067B C3 52 14            jp      $L1452
1036   067E 22 48 20    L067E:  ld      ($2048),hl
1037   0681 C9                  ret
1038   0682             
1039   0682 E1                  pop     hl
1040   0683 3A 80 20            ld      a,($2080)
1041   0686 FE 02               cp      $02
1042   0688 C0                  ret     nz
1043   0689             
1044   0689 21 83 20            ld      hl,$2083
1045   068C 7E                  ld      a,(hl)
1046   068D A7                  and     a
1047   068E CA 0F 05            jp      z,$L050F
1048   0691 3A 56 20            ld      a,($2056)
1049   0694 A7                  and     a
1050   0695 C2 0F 05            jp      nz,$L050F
1051   0698 23                  inc     hl
1052   0699 7E                  ld      a,(hl)
1053   069A A7                  and     a
1054   069B C2 AB 06            jp      nz,$L06AB
1055   069E 3A 82 20            ld      a,($2082)	; Number of aliens remaining
1056   06A1 FE 08               cp      $08		; Less than ...
1057   06A3 DA 0F 05            jp      c,$L050F	; 8, do this ...
1058   06A6 36 01               ld      (hl),$01
1059   06A8 CD 3C 07            call    $L073C
1060   06AB 11 8A 20    L06AB:  ld      de,$208a
1061   06AE CD 06 1A            call    $L1A06
1062   06B1 D0                  ret     nc
1063   06B2             
1064   06B2 21 85 20            ld      hl,$2085
1065   06B5 7E                  ld      a,(hl)
1066   06B6 A7                  and     a
1067   06B7 C2 D6 06            jp      nz,$L06D6
1068   06BA 21 8A 20            ld      hl,$208a
1069   06BD 7E                  ld      a,(hl)
1070   06BE 23                  inc     hl
1071   06BF 23                  inc     hl
1072   06C0 86                  add     a,(hl)
1073   06C1 32 8A 20            ld      ($208a),a
1074   06C4 CD 3C 07            call    $L073C
1075   06C7 21 8A 20            ld      hl,$208a
1076   06CA 7E                  ld      a,(hl)
1077   06CB FE 28               cp      $28
1078   06CD DA F9 06            jp      c,$L06F9
1079   06D0 FE E1               cp      $e1
1080   06D2 D2 F9 06            jp      nc,$L06F9
1081   06D5 C9                  ret
1082   06D6             
1083   06D6 06 FE       L06D6:  ld      b,$fe		; Turn off ...
1084   06D8 CD DC 19            call    TurnOffSounds	; ... UFO sound
1085   06DB 23                  inc     hl
1086   06DC 35                  dec     (hl)
1087   06DD 7E                  ld      a,(hl)
1088   06DE FE 1F               cp      $1f
1089   06E0 CA 4B 07            jp      z,$L074B
1090   06E3 FE 18               cp      $18
1091   06E5 CA 0C 07            jp      z,$L070C
1092   06E8 A7                  and     a
1093   06E9 C0                  ret     nz
1094   06EA 06 EF               ld      b,$ef
1095   06EC 21 98 20            ld      hl,$2098
1096   06EF 7E                  ld      a,(hl)
1097   06F0 A0                  and     b
1098   06F1 77                  ld      (hl),a
1099   06F2 E6 20               and     $20		; All off but
1100   06F4 D3 05               out     ($05),a	; Sound
1101   06F6 00                  nop     		; Pause
1102   06F7 00                  nop     		; Pause
1103   06F8 00                  nop     		; Pause
1104   06F9 CD 42 07    L06F9:  call    $L0742		; Covert pixel pos from descriptor to HL screen and shift
1105   06FC CD CB 14            call    $L14CB		; Clear a one byte sprite at HL
1106   06FF 21 83 20            ld      hl,$2083	; RAM ?
1107   0702 06 0A               ld      b,$0a		; 10 bytes
1108   0704 CD 5F 07            call    $L075F		; Re-initialize some RAM
1109   0707 06 FE       L0707:  ld      b,$fe		; Turn off ...
1110   0709 C3 DC 19            jp      TurnOffSounds	; ... UFO sound
1111   070C             
1112   070C 3E 01       L070C:  ld      a,$01
1113   070E 32 F1 20            ld      ($20f1),a
1114   0711 2A 8D 20            ld      hl,($208d)
1115   0714 46                  ld      b,(hl)
1116   0715 0E 04               ld      c,$04
1117   0717 21 50 1D            ld      hl,$1d50 ; -- POSSIBLE LABEL --
1118   071A 11 4C 1D            ld      de,$1d4c ; -- POSSIBLE LABEL --
1119   071D 1A          L071D:  ld      a,(de)
1120   071E B8                  cp      b
1121   071F CA 28 07            jp      z,$L0728
1122   0722 23                  inc     hl
1123   0723 13                  inc     de
1124   0724 0D                  dec     c
1125   0725 C2 1D 07            jp      nz,$L071D
1126   0728 7E          L0728:  ld      a,(hl)
1127   0729 32 87 20            ld      ($2087),a	; First of descriptor (X coordinate)
1128   072C 26 00               ld      h,$00		; MSB = 0 ...
1129   072E 68                  ld      l,b		; HL = B
1130   072F 29                  add     hl,hl		; *2
1131   0730 29                  add     hl,hl		; *4
1132   0731 29                  add     hl,hl		; *8
1133   0732 29                  add     hl,hl		; *16
1134   0733 22 F2 20            ld      ($20f2),hl	; Score for hitting saucer???
1135   0736 CD 42 07            call    $L0742		; Fetch 5 bytes from 2087 descriptor
1136   0739 C3 F1 08            jp      $L08F1		; Print message of length 3 (saucer score?)
1137   073C             
1138   073C CD 42 07    L073C:  call    $L0742		; Fetch info from 2087 descriptor
1139   073F C3 39 14            jp      $L1439		; Print single character
1140   0742             
1141   0742 21 87 20    L0742:  ld      hl,$2087	; ? Descriptor ?
1142   0745 CD 3B 1A            call    $L1A3B		; Load 5 bytes from HL
1143   0748 C3 47 1A            jp      $L1A47		; Convert pixel number to screen and shift
1144   074B             ;
1145   074B 06 10       L074B:  ld      b,$10
1146   074D 21 98 20            ld      hl,$2098
1147   0750 7E                  ld      a,(hl)
1148   0751 B0                  or      b
1149   0752 77                  ld      (hl),a
1150   0753 CD 70 17            call    $L1770
1151   0756 21 7C 1D            ld      hl,$1d7c ; -- POSSIBLE LABEL --
1152   0759 22 87 20            ld      ($2087),hl
1153   075C C3 3C 07            jp      $L073C
1154   075F             ;
1155   075F 11 83 1B    L075F:  ld      de,$1b83	; Data for ? ; -- POSSIBLE LABEL --
1156   0762 C3 32 1A            jp      BlockMoveDEtoHL		; Block copy [HL] to [DE]
1157   0765             
1158   0765             ;=============================================================
1159   0765             ; Wait for player 1 start button press
1160   0765 3E 01       L0765:  ld      a,$01
1161   0767 32 93 20            ld      ($2093),a
1162   076A 31 00 24            ld      sp,$2400	; Reset stack
1163   076D FB                  ei      		; Enable interrupts
1164   076E CD 79 19            call    $L1979		; Clear the 20E9 flag ???
1165   0771 CD D6 09            call    $L09D6		; Clear center window
1166   0774 21 13 30            ld      hl,$3013	; Screen coordinates
1167   0777 11 F3 1F            ld      de,ROM_MsgPush	; "PUSH" 
1168   077A 0E 04               ld      c,$04		; Message length
1169   077C CD F3 08            call    $L08F3		; Print it
1170   077F 3A EB 20    L077F:  ld      a,(RAM_NumCredits)	; Number of credits
1171   0782 3D                  dec     a		; Set flags
1172   0783 21 10 28            ld      hl,$2810	; Screen coordinates
1173   0786 0E 14               ld      c,$14		; Message length
1174   0788 C2 57 08            jp      nz,$L0857	; Take 1 or 2 player start
1175   078B 11 CF 1A            ld      de,ROM_MsgOnly1	; "ONLY 1PLAYER BUTTON "
1176   078E CD F3 08            call    $L08F3		; Print message
1177   0791 DB 01               in      a,($01)	        ; Read player controls
1178   0793 E6 04               and     $04		; 1Player start button?
1179   0795 CA 7F 07            jp      z,$L077F	        ; No ... wait for button or credit
1180   0798             
1181   0798             ;=============================================================
1182   0798             ; START NEW GAME
1183   0798             ;
1184   0798             ; 1 Player start
1185   0798 06 99       L0798:  ld      b,$99		; Essentially a -1 for DAA
1186   079A AF                  xor     a		; Clear two player flag
1187   079B             ;
1188   079B             ; 2 player start sequence enters here with a=1 and B=98 (-2)
1189   079B 32 CE 20    L079B:  ld      ($20ce),a	; Set flag for 1 or 2 players
1190   079E 3A EB 20            ld      a,(RAM_NumCredits)	; Number of credits
1191   07A1 80                  add     a,b		; Take away credits
1192   07A2 27                  daa     		; Convert back to DAA
1193   07A3 32 EB 20            ld      (RAM_NumCredits),a	; New credit count
1194   07A6 CD 47 19            call    $L1947		; Display number of credits
1195   07A9 21 00 00            ld      hl,$0000 
1196   07AC 22 F8 20            ld      ($20f8),hl
1197   07AF 22 FC 20            ld      ($20fc),hl
1198   07B2 CD 25 19            call    $L1925
1199   07B5 CD 2B 19            call    $L192B
1200   07B8 CD D7 19            call    $L19D7
1201   07BB 21 01 01            ld      hl,$0101 
1202   07BE 7C                  ld      a,h
1203   07BF 32 EF 20            ld      ($20ef),a
1204   07C2 22 E7 20            ld      ($20e7),hl
1205   07C5 22 E5 20            ld      ($20e5),hl
1206   07C8 CD 56 19            call    $L1956		; Print scores and credits
1207   07CB CD EF 01            call    $L01EF
1208   07CE CD F5 01            call    $L01F5
1209   07D1 CD D1 08            call    $L08D1		; Get number of ships from DIP settings
1210   07D4 32 FF 21            ld      ($21ff),a
1211   07D7 32 FF 22            ld      ($22ff),a
1212   07DA CD D7 00            call    $L00D7
1213   07DD AF                  xor     a
1214   07DE 32 FE 21            ld      ($21fe),a
1215   07E1 32 FE 22            ld      ($22fe),a
1216   07E4 CD C0 01            call    $L01C0
1217   07E7 CD 04 19            call    $L1904
1218   07EA 21 78 38            ld      hl,$3878
1219   07ED 22 FC 21            ld      ($21fc),hl
1220   07F0 22 FC 22            ld      ($22fc),hl
1221   07F3 CD E4 01            call    $L01E4
1222   07F6 CD 7F 1A            call    $L1A7F		; Initialize ship hold indicator
1223   07F9             ;
1224   07F9 CD 8D 08    L07F9:  call    $L088D
1225   07FC CD D6 09            call    $L09D6
1226   07FF 00                  nop
1227   0800 AF                  xor     a
1228   0801 32 C1 20            ld      ($20c1),a
1229   0804 CD CF 01    L0804:  call    $L01CF
1230   0807 3A 67 20            ld      a,(RAM_ActivePlayer)
1231   080A 0F                  rrca
1232   080B DA 72 08            jp      c,$L0872
1233   080E CD 13 02            call    $L0213
1234   0811 CD CF 01            call    $L01CF
1235   0814 CD B1 00    L0814:  call    $L00B1
1236   0817 CD D1 19    L0817:  call    $L19D1		; Set 20E9 flag to 1
1237   081A 06 20               ld      b,$20           ; Turn on sound amp ...
1238   081C CD FA 18            call    TurnOnSounds	; ... and turn off other sounds
1239   081F             ;
1240   081F             ; GAME LOOP
1241   081F             ;
1242   081F CD 18 16    L081F:  call    $L1618		; Initiate player shot if button pressed
1243   0822 CD 0A 19            call    $L190A		; ??? Collision detection for shot ???
1244   0825 CD F3 15            call    $L15F3		; ???
1245   0828 CD 88 09            call    $L0988		; ???
1246   082B 3A 82 20            ld      a,($2082)
1247   082E A7                  and     a
1248   082F CA EF 09            jp      z,$L09EF	; ???
1249   0832 CD 0E 17            call    $L170E		; ???
1250   0835 CD 35 09            call    $L0935		; Check (and handle) extra ship award
1251   0838 CD D8 08            call    $L08D8		; ???
1252   083B CD 2C 17            call    $L172C		; Shot sound on or off with 2025
1253   083E CD 59 0A            call    $L0A59		; Check if player is hit
1254   0841 CA 49 08            jp      z,$L0849	; No hit ... jump handler
1255   0844 06 04               ld      b,$04		; Player explosion ...
1256   0846 CD FA 18            call    TurnOnSounds	; ... sound
1257   0849 CD 75 17    L0849:  call    $L1775		; ???
1258   084C D3 06               out     ($06),a	        ; Feed the watchdog
1259   084E CD 04 18            call    $L1804		; ???
1260   0851 C3 1F 08            jp      $L081F		; Continue game loop
1261   0854             
1262   0854 00                  nop
1263   0855 00                  nop
1264   0856 00                  nop
1265   0857             
1266   0857             ;=============================================================
1267   0857             ; Test for 1 or 2 player start button press
1268   0857 11 BA 1A    L0857:  ld      de,ROM_Msg1or2	; "1 OR 2PLAYERS BUTTON" 
1269   085A CD F3 08            call    $L08F3		; Print message
1270   085D 06 98               ld      b,$98		; -2 (take away 2 credits)
1271   085F DB 01               in      a,($01)	        ; Read player controls
1272   0861 0F                  rrca    		; Test ...
1273   0862 0F                  rrca    		; ... bit 2
1274   0863 DA 6D 08            jp      c,$L086D	        ; 2 player button pressed ... do it
1275   0866 0F                  rrca    		; Test bit 3
1276   0867 DA 98 07            jp      c,$L0798	        ; One player start ... do it
1277   086A C3 7F 07            jp      $L077F		; Keep waiting on credit or button
1278   086D             ; 2 PLAYER START
1279   086D 3E 01       L086D:  ld      a,$01		; Flag 2 player game
1280   086F C3 9B 07            jp      $L079B		; Continue normal startup
1281   0872             
1282   0872             ;=============================================================
1283   0872 CD 1A 02    L0872:  call    $L021A
1284   0875 C3 14 08            jp      $L0814
1285   0878 3A 08 20    L0878:  ld      a,($2008)
1286   087B 47                  ld      b,a
1287   087C 2A 09 20            ld      hl,($2009)
1288   087F EB                  ex      de,hl
1289   0880 C3 86 08            jp      $L0886
1290   0883 00                  nop
1291   0884 00                  nop
1292   0885 00                  nop
1293   0886 3A 67 20    L0886:  ld      a,(RAM_ActivePlayer)
1294   0889 67                  ld      h,a
1295   088A 2E FC               ld      l,$fc
1296   088C C9                  ret
1297   088D             
1298   088D 21 11 2B    L088D:  ld      hl,$2b11
1299   0890 11 70 1B            ld      de,$1b70 ; -- POSSIBLE LABEL --
1300   0893 0E 0E               ld      c,$0e
1301   0895 CD F3 08            call    $L08F3
1302   0898 3A 67 20            ld      a,(RAM_ActivePlayer)
1303   089B 0F                  rrca
1304   089C 3E 1C               ld      a,$1c
1305   089E 21 11 37            ld      hl,$3711
1306   08A1 D4 FF 08            call    nc,$L08FF
1307   08A4 3E B0               ld      a,$b0              ; Set counter ...
1308   08A6 32 C0 20            ld      (RAM_GPCounter),a  ; ... to B0
1309   08A9 3A C0 20    L08A9:  ld      a,(RAM_GPCounter)  ; Return if ...
1310   08AC A7                  and     a                  ; ... counter ...
1311   08AD C8                  ret     z                  ; reached 0
1312   08AE E6 04               and     $04
1313   08B0 C2 BC 08            jp      nz,$L08BC
1314   08B3 CD CA 09            call    $L09CA
1315   08B6 CD 31 19            call    $L1931
1316   08B9 C3 A9 08            jp      $L08A9             ; Back to check on counter
1317   08BC             
1318   08BC 06 20       L08BC:  ld      b,$20
1319   08BE 21 1C 27            ld      hl,$271c
1320   08C1 3A 67 20            ld      a,(RAM_ActivePlayer)
1321   08C4 0F                  rrca
1322   08C5 DA CB 08            jp      c,$L08CB
1323   08C8 21 1C 39            ld      hl,$391c
1324   08CB CD CB 14    L08CB:  call    $L14CB		  ; Clear a one byte sprite at HL
1325   08CE C3 A9 08            jp      $L08A9            ; Back to check on counter
1326   08D1             
1327   08D1             
1328   08D1             ;=============================================================
1329   08D1             ; Get number of ships from DIP settings
1330   08D1 DB 02       L08D1:  in      a,($02)	; DIP settings
1331   08D3 E6 03               and     $03		; Get number of ships
1332   08D5 C6 03               add     a,$03		; From 3-6
1333   08D7 C9                  ret     		; Out
1334   08D8             
1335   08D8 3A 82 20    L08D8:  ld      a,($2082)	; Number of aliens on screen
1336   08DB FE 09               cp      $09
1337   08DD D0                  ret     nc
1338   08DE 3E FB               ld      a,$fb
1339   08E0 32 7E 20            ld      ($207e),a
1340   08E3 C9                  ret
1341   08E4             
1342   08E4 3A CE 20    L08E4:  ld      a,($20ce)
1343   08E7 A7                  and     a
1344   08E8 C0                  ret     nz
1345   08E9             
1346   08E9 21 1C 39            ld      hl,$391c
1347   08EC 06 20               ld      b,$20		; 32 rows
1348   08EE C3 CB 14            jp      $L14CB		; Clear a one byte sprite at HL
1349   08F1             
1350   08F1 0E 03       L08F1:  ld      c,$03
1351   08F3             
1352   08F3             ;=============================================================
1353   08F3             ; Print a message on the screen
1354   08F3             ; HL = coordinates
1355   08F3             ; DE = message buffer
1356   08F3             ; C = length
1357   08F3 1A          L08F3:  ld      a,(de)	; Get character
1358   08F4 D5                  push    de		; Preserve
1359   08F5 CD FF 08            call    $L08FF		; Print character
1360   08F8 D1                  pop     de		; Restore
1361   08F9 13                  inc     de		; Next character
1362   08FA 0D                  dec     c		; All done?
1363   08FB C2 F3 08            jp      nz,$L08F3	; Print all of message
1364   08FE C9                  ret     		; Out
1365   08FF             
1366   08FF             ;=============================================================
1367   08FF             ; Get pointer to 8 byte sprite number in A and
1368   08FF             ; draw sprite on screen at HL
1369   08FF 11 00 1E    L08FF:  ld      de,ROM_TextSprites	; Character set 
1370   0902 E5                  push    hl		; Preserve
1371   0903 26 00               ld      h,$00		; MSB=0
1372   0905 6F                  ld      l,a		; Character number to L
1373   0906 29                  add     hl,hl		; HL = HL *2
1374   0907 29                  add     hl,hl		; *4
1375   0908 29                  add     hl,hl		; *8 (8 bytes each)
1376   0909 19                  add     hl,de		; Get pointer to sprite
1377   090A EB                  ex      de,hl		; Now into DE
1378   090B E1                  pop     hl		; Restore HL
1379   090C 06 08               ld      b,$08		; 8 bytes each
1380   090E D3 06               out     ($06),a	        ; Feed watchdog
1381   0910 C3 39 14            jp      $L1439		; To screen
1382   0913             
1383   0913             ;=============================================================
1384   0913 3A 09 20    L0913:  ld      a,($2009)
1385   0916 FE 78               cp      $78
1386   0918 D0                  ret     nc
1387   0919 2A 91 20            ld      hl,($2091)
1388   091C 7D                  ld      a,l
1389   091D B4                  or      h
1390   091E C2 29 09            jp      nz,$L0929
1391   0921 21 00 06            ld      hl,$0600 ; -- POSSIBLE LABEL --
1392   0924 3E 01               ld      a,$01
1393   0926 32 83 20            ld      ($2083),a
1394   0929 2B          L0929:  dec     hl
1395   092A 22 91 20            ld      ($2091),hl
1396   092D C9                  ret
1397   092E             
1398   092E             ;=============================================================
1399   092E             ; Get number of ships for acive player
1400   092E CD 11 16    L092E:  call    $L1611		; HL points to player data
1401   0931 2E FF               ld      l,$ff		; Last byte = numbe of ships
1402   0933 7E                  ld      a,(hl)	; Get number of ships
1403   0934 C9                  ret     		; Done
1404   0935             
1405   0935             ;=============================================================
1406   0935             ; Award extra ship if score has reached ceiling
1407   0935 CD 10 19    L0935:  call    $L1910		; Get descriptor of sorts
1408   0938 2B                  dec     hl		; Back up ...
1409   0939 2B                  dec     hl		; ... two bytes
1410   093A 7E                  ld      a,(hl)	; Has extra ship ...
1411   093B A7                  and     a		; already been awarded?
1412   093C C8                  ret     z		; Yes ... ignore
1413   093D 06 15               ld      b,$15		; Default 1500
1414   093F DB 02               in      a,($02)	; Read DIP settings
1415   0941 E6 08               and     $08		; Extra ship at 1000 or 1500
1416   0943 CA 48 09            jp      z,$L0948	; 0=1500
1417   0946 06 10               ld      b,$10		; Awarded at 1000
1418   0948 CD CA 09    L0948:  call    $L09CA		; Get score descriptor for active player
1419   094B 23                  inc     hl		; MSB of score ...
1420   094C 7E                  ld      a,(hl)	; ... to accumulator
1421   094D B8                  cp      b		; Time for an extra ship?
1422   094E D8                  ret     c		; No ... out
1423   094F CD 2E 09            call    $L092E		; Get pointer to number of ships
1424   0952 34                  inc     (hl)		; Bump number of ships
1425   0953 7E                  ld      a,(hl)	; Get the new total
1426   0954 F5                  push    af		; Hang onto it for a bit
1427   0955 21 01 25            ld      hl,$2501	; Screen coords for ship hold
1428   0958 24          L0958:  inc     h		; Bump to ...
1429   0959 24                  inc     h		; ... next
1430   095A 3D                  dec     a		; ... spot
1431   095B C2 58 09            jp      nz,$L0958	; Find spot for new ship
1432   095E 06 10               ld      b,$10		; 16 byte sprite
1433   0960 11 60 1C            ld      de,ROM_PlayerSprite	; Player sprite 
1434   0963 CD 39 14            call    $L1439		; Draw the sprite
1435   0966 F1                  pop     af		; Restore the count
1436   0967 3C                  inc     a		; +1
1437   0968 CD 8B 1A            call    $L1A8B		; Print the number of ships
1438   096B CD 10 19            call    $L1910		; Get descriptor for active player of some sort
1439   096E 2B                  dec     hl		; Back up ...
1440   096F 2B                  dec     hl		; ... two bytes
1441   0970 36 00               ld      (hl),$00	; Flag extra ship has been awarded
1442   0972 3E FF               ld      a,$ff		; Set timer ...
1443   0974 32 99 20            ld      ($2099),a	; ... for extra-ship sound
1444   0977 06 10               ld      b,$10		; Turn on ...
1445   0979 C3 FA 18            jp      TurnOnSounds	; ... extra player sound
1446   097C             
1447   097C 21 A0 1D    L097C:  ld      hl,$1da0 ; -- POSSIBLE LABEL --
1448   097F FE 02               cp      $02
1449   0981 D8                  ret     c
1450   0982 23                  inc     hl
1451   0983 FE 04               cp      $04
1452   0985 D8                  ret     c
1453   0986 23                  inc     hl
1454   0987 C9                  ret
1455   0988             
1456   0988 CD CA 09    L0988:  call    $L09CA
1457   098B 3A F1 20            ld      a,($20f1)
1458   098E A7                  and     a
1459   098F C8                  ret     z
1460   0990 AF                  xor     a
1461   0991 32 F1 20            ld      ($20f1),a
1462   0994 E5                  push    hl
1463   0995 2A F2 20            ld      hl,($20f2)
1464   0998 EB                  ex      de,hl
1465   0999 E1                  pop     hl
1466   099A 7E                  ld      a,(hl)
1467   099B 83                  add     a,e
1468   099C 27                  daa
1469   099D 77                  ld      (hl),a
1470   099E 5F                  ld      e,a
1471   099F 23                  inc     hl
1472   09A0 7E                  ld      a,(hl)
1473   09A1 8A                  adc     a,d
1474   09A2 27                  daa
1475   09A3 77                  ld      (hl),a
1476   09A4 57                  ld      d,a
1477   09A5 23                  inc     hl
1478   09A6 7E                  ld      a,(hl)
1479   09A7 23                  inc     hl
1480   09A8 66                  ld      h,(hl)
1481   09A9 6F                  ld      l,a
1482   09AA C3 AD 09            jp      $L09AD	; Why on earth are we jumping to next?
1483   09AD             
1484   09AD             ;=============================================================
1485   09AD             ; Print 4 digits in DE
1486   09AD 7A          L09AD:  ld      a,d
1487   09AE CD B2 09            call    $L09B2
1488   09B1 7B                  ld      a,e
1489   09B2             
1490   09B2             ;=============================================================
1491   09B2             ; Display 2 digits in A to screen at HL
1492   09B2 D5          L09B2:  push    de	; Preserve
1493   09B3 F5                  push    af	; Save for later
1494   09B4 0F                  rrca    	; Get ...
1495   09B5 0F                  rrca    	; ...
1496   09B6 0F                  rrca    	; ...
1497   09B7 0F                  rrca    	; ... left digit
1498   09B8 E6 0F               and     $0f	; Mask out lower digit's bits
1499   09BA CD C5 09            call    $L09C5	; To screen at HL
1500   09BD F1                  pop     af	; Restore digit
1501   09BE E6 0F               and     $0f	; Mask out upper digit
1502   09C0 CD C5 09            call    $L09C5	; To screen
1503   09C3 D1                  pop     de	; Restore
1504   09C4 C9                  ret     	; Done
1505   09C5             ;
1506   09C5 C6 1A       L09C5:  add     a,$1a	; Bump to number characters
1507   09C7 C3 FF 08            jp      $L08FF	; Continue ...
1508   09CA             
1509   09CA             ;=============================================================
1510   09CA             ; Get score descriptor for active player
1511   09CA 3A 67 20    L09CA:  ld      a,(RAM_ActivePlayer)	; Get active player
1512   09CD 0F                  rrca    		; Test for player
1513   09CE 21 F8 20            ld      hl,$20f8	; Player 1 score descriptor
1514   09D1 D8                  ret     c		; Keep it if player 1 is active
1515   09D2 21 FC 20            ld      hl,$20fc	; Else get player 2 descriptor
1516   09D5 C9                  ret     		; Out
1517   09D6             
1518   09D6             ;=============================================================
1519   09D6             ; Clear center window of screen
1520   09D6 21 02 24    L09D6:  ld      hl,$2402	; Thrid from left, top of screen
1521   09D9 36 00       L09D9:  ld      (hl),$00	; Clear screen byte
1522   09DB 23                  inc     hl		; Next in row
1523   09DC 7D                  ld      a,l		; Get X ...
1524   09DD E6 1F               and     $1f		; ... coordinate
1525   09DF FE 1C               cp      $1c		; Edge minus a buffer?
1526   09E1 DA E8 09            jp      c,$L09E8	; No ... keep going
1527   09E4 11 06 00            ld      de,$0006	; Else ... bump to 
1528   09E7 19                  add     hl,de		; ... next edge + buffer
1529   09E8 7C          L09E8:  ld      a,h		; Get Y coordinate
1530   09E9 FE 40               cp      $40		; Reached bottom?
1531   09EB DA D9 09            jp      c,$L09D9	; No ... keep going
1532   09EE C9                  ret     		; Done
1533   09EF             
1534   09EF CD 3C 0A    L09EF:  call    $L0A3C
1535   09F2 AF                  xor     a
1536   09F3 32 E9 20            ld      ($20e9),a
1537   09F6 CD D6 09            call    $L09D6
1538   09F9 3A 67 20            ld      a,(RAM_ActivePlayer)
1539   09FC F5                  push    af
1540   09FD CD E4 01            call    $L01E4
1541   0A00 F1                  pop     af
1542   0A01 32 67 20            ld      (RAM_ActivePlayer),a
1543   0A04 3A 67 20            ld      a,(RAM_ActivePlayer)
1544   0A07 67                  ld      h,a
1545   0A08 E5                  push    hl
1546   0A09 2E FE               ld      l,$fe
1547   0A0B 7E                  ld      a,(hl)
1548   0A0C E6 07               and     $07
1549   0A0E 3C                  inc     a
1550   0A0F 77                  ld      (hl),a
1551   0A10 21 A2 1D            ld      hl,$1da2 ; -- POSSIBLE LABEL --
1552   0A13 23          L0A13:  inc     hl
1553   0A14 3D                  dec     a
1554   0A15 C2 13 0A            jp      nz,$L0A13
1555   0A18 7E                  ld      a,(hl)
1556   0A19 E1                  pop     hl
1557   0A1A 2E FC               ld      l,$fc
1558   0A1C 77                  ld      (hl),a
1559   0A1D 23                  inc     hl
1560   0A1E 36 38               ld      (hl),$38
1561   0A20 7C                  ld      a,h
1562   0A21 0F                  rrca
1563   0A22 DA 33 0A            jp      c,$L0A33
1564   0A25 3E 21               ld      a,$21
1565   0A27 32 98 20            ld      ($2098),a
1566   0A2A CD F5 01            call    $L01F5
1567   0A2D CD 04 19            call    $L1904
1568   0A30 C3 04 08            jp      $L0804
1569   0A33 CD EF 01    L0A33:  call    $L01EF
1570   0A36 CD C0 01            call    $L01C0
1571   0A39 C3 04 08            jp      $L0804
1572   0A3C CD 59 0A    L0A3C:  call    $L0A59
1573   0A3F C2 52 0A            jp      nz,$L0A52
1574   0A42 3E 30               ld      a,$30
1575   0A44 32 C0 20            ld      (RAM_GPCounter),a
1576   0A47 3A C0 20    L0A47:  ld      a,(RAM_GPCounter)
1577   0A4A A7                  and     a
1578   0A4B C8                  ret     z
1579   0A4C             
1580   0A4C CD 59 0A            call    $L0A59
1581   0A4F CA 47 0A            jp      z,$L0A47
1582   0A52 CD 59 0A    L0A52:  call    $L0A59
1583   0A55 C2 52 0A            jp      nz,$L0A52
1584   0A58 C9                  ret
1585   0A59             
1586   0A59             ;=============================================================
1587   0A59             ; Check to see if player is hit
1588   0A59 3A 15 20    L0A59:  ld      a,($2015)	; Active player hit flag
1589   0A5C FE FF               cp      $ff		; All FFs means player is OK
1590   0A5E C9                  ret     		; Out
1591   0A5F             
1592   0A5F 3A EF 20    L0A5F:  ld      a,($20ef)	; Test for demo play
1593   0A62 A7                  and     a		; '
1594   0A63 CA 7C 0A            jp      z,$L0A7C	; Yes ... skip
1595   0A66 48                  ld      c,b		; Hold B
1596   0A67 06 08               ld      b,$08		; Alien-hit ...
1597   0A69 CD FA 18            call    TurnOnSounds	; ... sound
1598   0A6C 41                  ld      b,c		; Restore B
1599   0A6D 78                  ld      a,b		; Into A
1600   0A6E CD 7C 09            call    $L097C
1601   0A71 7E                  ld      a,(hl)
1602   0A72 21 F3 20            ld      hl,$20f3
1603   0A75 36 00               ld      (hl),$00
1604   0A77 2B                  dec     hl
1605   0A78 77                  ld      (hl),a
1606   0A79 2B                  dec     hl
1607   0A7A 36 01               ld      (hl),$01
1608   0A7C 21 62 20    L0A7C:  ld      hl,$2062	; Return exploding-alien descriptor
1609   0A7F C9                  ret     		; Out
1610   0A80             
1611   0A80 3E 02       L0A80:  ld      a,$02
1612   0A82 32 C1 20            ld      ($20c1),a
1613   0A85 D3 06       L0A85:  out     ($06),a	        ; Feed watchdog
1614   0A87 3A CB 20            ld      a,($20cb)
1615   0A8A A7                  and     a
1616   0A8B CA 85 0A            jp      z,$L0A85
1617   0A8E AF                  xor     a
1618   0A8F 32 C1 20            ld      ($20c1),a
1619   0A92 C9                  ret
1620   0A93             
1621   0A93             ;=============================================================
1622   0A93             ; Print message from DE to screen at HL (length in B) with a
1623   0A93             ; delay between letters.
1624   0A93 D5          L0A93:  push    de		; Preserve
1625   0A94 1A                  ld      a,(de)	; Get character
1626   0A95 CD FF 08            call    $L08FF		; Draw character on screen
1627   0A98 D1                  pop     de		; Preserve
1628   0A99 3E 07               ld      a,$07		; Delay between letters
1629   0A9B 32 C0 20            ld      (RAM_GPCounter),a	; Set counter
1630   0A9E 3A C0 20    L0A9E:  ld      a,(RAM_GPCounter)	; Get counter
1631   0AA1 3D                  dec     a		; Is it 1?
1632   0AA2 C2 9E 0A            jp      nz,$L0A9E	; No ... wait on it
1633   0AA5 13                  inc     de		; Next in message
1634   0AA6 0D                  dec     c		; All done?
1635   0AA7 C2 93 0A            jp      nz,$L0A93	; No ... do all
1636   0AAA C9                  ret     		; Out
1637   0AAB             
1638   0AAB 21 50 20    L0AAB:  ld      hl,$2050
1639   0AAE C3 4B 02            jp      $L024B
1640   0AB1             
1641   0AB1             ;=============================================================
1642   0AB1             ; Delay 40 interrupts
1643   0AB1 3E 40       L0AB1:  ld      a,$40		; Delay of 40
1644   0AB3 C3 D7 0A            jp      $L0AD7		; Do delay
1645   0AB6             
1646   0AB6             ;=============================================================
1647   0AB6             ; Delay 80 interrupts
1648   0AB6 3E 80       L0AB6:  ld      a,$80		; Delay of 80
1649   0AB8 C3 D7 0A            jp      $L0AD7		; Do delay
1650   0ABB             
1651   0ABB E1          L0ABB:  pop     hl
1652   0ABC C3 72 00            jp      $L0072
1653   0ABF             
1654   0ABF             ;=============================================================
1655   0ABF 3A C1 20    L0ABF:  ld      a,($20c1)
1656   0AC2 0F                  rrca
1657   0AC3 DA BB 0A            jp      c,$L0ABB
1658   0AC6 0F                  rrca
1659   0AC7 DA 68 18            jp      c,$L1868
1660   0ACA 0F                  rrca
1661   0ACB DA AB 0A            jp      c,$L0AAB
1662   0ACE C9                  ret
1663   0ACF 21 14 2B    L0ACF:  ld      hl,$2b14
1664   0AD2 0E 0F               ld      c,$0f
1665   0AD4 C3 93 0A            jp      $L0A93
1666   0AD7             
1667   0AD7             ;=============================================================
1668   0AD7             ; Wait on ISR counter to reach 0
1669   0AD7 32 C0 20    L0AD7:  ld      (RAM_GPCounter),a	; Delay counter
1670   0ADA 3A C0 20    L0ADA:  ld      a,(RAM_GPCounter)	; Get current delay
1671   0ADD A7                  and     a		; Zero yet?
1672   0ADE C2 DA 0A            jp      nz,$L0ADA	; No ... wait on it
1673   0AE1 C9                  ret     		; Out
1674   0AE2             
1675   0AE2 21 C2 20    L0AE2:  ld      hl,$20c2	; RAM
1676   0AE5 06 0C               ld      b,$0c		; C bytes
1677   0AE7 C3 32 1A            jp      BlockMoveDEtoHL		; Block copy DE to HL (B)
1678   0AEA             
1679   0AEA             ;=============================================================
1680   0AEA             ; After initialization
1681   0AEA AF          L0AEA:  xor     a
1682   0AEB D3 03               out     ($03),a	; Turn off sound
1683   0AED D3 05               out     ($05),a	; Turn off sound
1684   0AEF CD 82 19            call    $L1982
1685   0AF2 FB                  ei
1686   0AF3 CD B1 0A            call    $L0AB1
1687   0AF6 3A EC 20            ld      a,($20ec)
1688   0AF9 A7                  and     a
1689   0AFA 21 17 30            ld      hl,$3017
1690   0AFD 0E 04               ld      c,$04
1691   0AFF C2 E8 0B            jp      nz,$L0BE8
1692   0B02 11 FA 1C            ld      de,$1cfa ; -- POSSIBLE LABEL --
1693   0B05 CD 93 0A            call    $L0A93
1694   0B08 11 AF 1D            ld      de,$1daf ; -- POSSIBLE LABEL --
1695   0B0B CD CF 0A    L0B0B:  call    $L0ACF
1696   0B0E CD B1 0A            call    $L0AB1
1697   0B11 CD 15 18            call    $L1815
1698   0B14 CD B6 0A            call    $L0AB6
1699   0B17 3A EC 20            ld      a,($20ec)
1700   0B1A A7                  and     a
1701   0B1B C2 4A 0B            jp      nz,$L0B4A
1702   0B1E 11 95 1A            ld      de,$1a95 ; -- POSSIBLE LABEL --
1703   0B21 CD E2 0A            call    $L0AE2		; Copy to RAM
1704   0B24 CD 80 0A            call    $L0A80
1705   0B27 11 B0 1B            ld      de,$1bb0 ; -- POSSIBLE LABEL --
1706   0B2A CD E2 0A            call    $L0AE2
1707   0B2D CD 80 0A            call    $L0A80
1708   0B30 CD B1 0A            call    $L0AB1
1709   0B33 11 C9 1F            ld      de,$1fc9 ; -- POSSIBLE LABEL --
1710   0B36 CD E2 0A            call    $L0AE2
1711   0B39 CD 80 0A            call    $L0A80
1712   0B3C CD B1 0A            call    $L0AB1
1713   0B3F 21 B7 33            ld      hl,$33b7
1714   0B42 06 0A               ld      b,$0a		; 10 rows
1715   0B44 CD CB 14            call    $L14CB		; Clear a one byte sprite at HL
1716   0B47 CD B6 0A            call    $L0AB6
1717   0B4A CD D6 09    L0B4A:  call    $L09D6
1718   0B4D 3A FF 21            ld      a,($21ff)
1719   0B50 A7                  and     a
1720   0B51 C2 5D 0B            jp      nz,$L0B5D
1721   0B54 CD D1 08            call    $L08D1		; Get number of ships from DIP settings
1722   0B57 32 FF 21            ld      ($21ff),a
1723   0B5A CD 7F 1A            call    $L1A7F		; Remove a ship and update indicators
1724   0B5D CD E4 01    L0B5D:  call    $L01E4
1725   0B60 CD C0 01            call    $L01C0
1726   0B63 CD EF 01            call    $L01EF
1727   0B66 CD 1A 02            call    $L021A
1728   0B69 3E 01               ld      a,$01
1729   0B6B 32 C1 20            ld      ($20c1),a
1730   0B6E CD CF 01            call    $L01CF
1731   0B71 CD 18 16    L0B71:  call    $L1618
1732   0B74 CD F1 0B            call    $L0BF1
1733   0B77 D3 06               out     ($06),a	         ; Feed watchdog
1734   0B79 CD 59 0A            call    $L0A59
1735   0B7C CA 71 0B            jp      z,$L0B71
1736   0B7F AF                  xor     a		; Remove player shot ...
1737   0B80 32 25 20            ld      ($2025),a	; ... from activity
1738   0B83 CD 59 0A    L0B83:  call    $L0A59
1739   0B86 C2 83 0B            jp      nz,$L0B83
1740   0B89 AF          L0B89:  xor     a
1741   0B8A 32 C1 20            ld      ($20c1),a
1742   0B8D CD B1 0A            call    $L0AB1
1743   0B90 CD 88 19            call    $L1988
1744   0B93 0E 0C               ld      c,$0c
1745   0B95 21 11 2C            ld      hl,$2c11	; Screen coordinates
1746   0B98 11 90 1F            ld      de,ROM_MsgInsertCoin	; "INSERT  COIN" 
1747   0B9B CD F3 08            call    $L08F3		; Print message
1748   0B9E 3A EC 20            ld      a,($20ec)
1749   0BA1 FE 00               cp      $00
1750   0BA3 C2 AE 0B            jp      nz,$L0BAE
1751   0BA6 21 11 33            ld      hl,$3311	; Screen coordinates
1752   0BA9 3E 02               ld      a,$02		; Number 2
1753   0BAB CD FF 08            call    $L08FF		; Print number 2
1754   0BAE 01 9C 1F    L0BAE:  ld      bc,$1f9c ; -- POSSIBLE LABEL --
1755   0BB1 CD 56 18            call    $L1856
1756   0BB4 CD 4C 18            call    $L184C
1757   0BB7 DB 02               in      a,($02)
1758   0BB9 07                  rlca
1759   0BBA DA C3 0B            jp      c,$L0BC3
1760   0BBD 01 A0 1F            ld      bc,$1fa0 ; -- POSSIBLE LABEL --
1761   0BC0 CD 3A 18            call    $L183A
1762   0BC3 CD B6 0A    L0BC3:  call    $L0AB6
1763   0BC6 3A EC 20            ld      a,($20ec)
1764   0BC9 FE 00               cp      $00
1765   0BCB C2 DA 0B            jp      nz,$L0BDA
1766   0BCE 11 D5 1F            ld      de,$1fd5 ; -- POSSIBLE LABEL --
1767   0BD1 CD E2 0A            call    $L0AE2
1768   0BD4 CD 80 0A            call    $L0A80
1769   0BD7 CD 9E 18            call    $L189E
1770   0BDA 21 EC 20    L0BDA:  ld      hl,$20ec
1771   0BDD 7E                  ld      a,(hl)
1772   0BDE 3C                  inc     a
1773   0BDF E6 01               and     $01
1774   0BE1 77                  ld      (hl),a
1775   0BE2 CD D6 09            call    $L09D6
1776   0BE5 C3 DF 18            jp      $L18DF		; Gets back to AfterInitialization
1777   0BE8             
1778   0BE8 11 AB 1D    L0BE8:  ld      de,$1dab ; -- POSSIBLE LABEL --
1779   0BEB CD 93 0A            call    $L0A93
1780   0BEE C3 0B 0B            jp      $L0B0B
1781   0BF1 CD 0A 19    L0BF1:  call    $L190A
1782   0BF4 C3 9A 19            jp      $L199A
1783   0BF7             
1784   0BF7             
1785   0BF7             ROM_MsgTaitoCop: ; Text message "TAITO COP"
1786   0BF7 13 00 08 13        .db     $13,$00,$08,$13,$0e,$26,$02,$0e,$0f
1786   0BFB 0E 26 02 0E 
1786   0BFF 0F 
1787   0C00             
1788   0C00             ;0c00 - 13ff 00's
1789   0C00             
1790   1400                     .org    $1400
1791   1400 00          L1400:  nop
1792   1401 CD 74 14            call    $L1474
1793   1404 00                  nop
1794   1405 C5          L1405:  push    bc
1795   1406 E5                  push    hl
1796   1407 1A                  ld      a,(de)
1797   1408 D3 04               out     ($04),a
1798   140A DB 03               in      a,($03)	; Read shift register
1799   140C B6                  or      (hl)
1800   140D 77                  ld      (hl),a
1801   140E 23                  inc     hl
1802   140F 13                  inc     de
1803   1410 AF                  xor     a
1804   1411 D3 04               out     ($04),a
1805   1413 DB 03               in      a,($03)	; Read shift register
1806   1415 B6                  or      (hl)
1807   1416 77                  ld      (hl),a
1808   1417 E1                  pop     hl
1809   1418 01 20 00            ld      bc,$0020 ; -- POSSIBLE LABEL --
1810   141B 09                  add     hl,bc
1811   141C C1                  pop     bc
1812   141D 05                  dec     b
1813   141E C2 05 14            jp      nz,$L1405
1814   1421 C9                  ret
1815   1422             
1816   1422 00                  nop
1817   1423 00                  nop
1818   1424             
1819   1424             ;=============================================================
1820   1424             ; Clear a sprite from the screen (standard pixel number descriptor)  
1821   1424 CD 74 14    L1424:  call    $L1474		; Convert pixel number in HL
1822   1427 C5          L1427:  push    bc		; Hold
1823   1428 E5                  push    hl		; Hold
1824   1429 AF                  xor     a		; 0
1825   142A 77                  ld      (hl),a	; Clear screen byte
1826   142B 23                  inc     hl		; Next byte
1827   142C 77                  ld      (hl),a	; Clear byte
1828   142D 23                  inc     hl		; ? Why do this ?
1829   142E E1                  pop     hl		; Restore screen coordinate
1830   142F 01 20 00            ld      bc,$0020	; Add 1 row ... 
1831   1432 09                  add     hl,bc		; ... to screen coordinate
1832   1433 C1                  pop     bc		; Restore counter
1833   1434 05                  dec     b		; All rows done?
1834   1435 C2 27 14            jp      nz,$L1427	; Do all rows
1835   1438 C9                  ret     		; out
1836   1439             
1837   1439             ;=============================================================
1838   1439             ; Display character to screen
1839   1439             ; HL = screen coordinates
1840   1439             ; DE = character data
1841   1439             ; B = number of rows
1842   1439 C5          L1439:  push    bc		; Preserve counter
1843   143A 1A                  ld      a,(de)	; From character set ...
1844   143B 77                  ld      (hl),a	; ... to screen
1845   143C 13                  inc     de		; Next in character set
1846   143D 01 20 00            ld      bc,$0020	; Next row ... 
1847   1440 09                  add     hl,bc		; ... on screen
1848   1441 C1                  pop     bc		; Restore counter
1849   1442 05                  dec     b		; Decrement counter
1850   1443 C2 39 14            jp      nz,$L1439	; Do all
1851   1446 C9                  ret     		; Out
1852   1447             
1853   1447 00                  nop
1854   1448 00                  nop
1855   1449 00                  nop
1856   144A 00                  nop
1857   144B 00                  nop
1858   144C 00                  nop
1859   144D 00                  nop
1860   144E 00                  nop
1861   144F 00                  nop
1862   1450 00                  nop
1863   1451 00                  nop
1864   1452 CD 74 14    L1452:  call    $L1474
1865   1455 C5          L1455:  push    bc
1866   1456 E5                  push    hl
1867   1457 1A                  ld      a,(de)
1868   1458 D3 04               out     ($04),a
1869   145A DB 03               in      a,($03)	; Read shift-register
1870   145C 2F                  cpl
1871   145D A6                  and     (hl)
1872   145E 77                  ld      (hl),a
1873   145F 23                  inc     hl
1874   1460 13                  inc     de
1875   1461 AF                  xor     a
1876   1462 D3 04               out     ($04),a
1877   1464 DB 03               in      a,($03)	; Read shift register
1878   1466 2F                  cpl
1879   1467 A6                  and     (hl)
1880   1468 77                  ld      (hl),a
1881   1469 E1                  pop     hl
1882   146A 01 20 00            ld      bc,$0020 
1883   146D 09                  add     hl,bc
1884   146E C1                  pop     bc
1885   146F 05                  dec     b
1886   1470 C2 55 14            jp      nz,$L1455
1887   1473 C9                  ret
1888   1474             
1889   1474             ;=============================================================
1890   1474             ; Convert pixel number in HL to screen coordinate and shift amount.
1891   1474             ; HL gets screen coordinate.
1892   1474             ; Hardware shift-register gets amount.
1893   1474 7D          L1474:  ld      a,l		; Get X coordinate
1894   1475 E6 07               and     $07		; Shift by pixel position
1895   1477 D3 02               out     ($02),a	; Write shift amount
1896   1479 C3 47 1A            jp      $L1A47		; HL = HL/8 + 2000 (screen coordinate)
1897   147C             
1898   147C C5          L147C:  push    bc
1899   147D E5                  push    hl
1900   147E 7E          L147E:  ld      a,(hl)
1901   147F 12                  ld      (de),a
1902   1480 13                  inc     de
1903   1481 23                  inc     hl
1904   1482 0D                  dec     c
1905   1483 C2 7E 14            jp      nz,$L147E
1906   1486 E1                  pop     hl
1907   1487 01 20 00            ld      bc,$0020 
1908   148A 09                  add     hl,bc
1909   148B C1                  pop     bc
1910   148C 05                  dec     b
1911   148D C2 7C 14            jp      nz,$L147C
1912   1490 C9                  ret
1913   1491             
1914   1491 CD 74 14    L1491:  call    $L1474
1915   1494 AF                  xor     a
1916   1495 32 61 20            ld      ($2061),a
1917   1498 C5          L1498:  push    bc
1918   1499 E5                  push    hl
1919   149A 1A                  ld      a,(de)
1920   149B D3 04               out     ($04),a
1921   149D DB 03               in      a,($03)	; Read shift-register
1922   149F F5                  push    af
1923   14A0 A6                  and     (hl)
1924   14A1 CA A9 14            jp      z,$L14A9
1925   14A4 3E 01               ld      a,$01
1926   14A6 32 61 20            ld      ($2061),a
1927   14A9 F1          L14A9:  pop     af
1928   14AA B6                  or      (hl)
1929   14AB 77                  ld      (hl),a
1930   14AC 23                  inc     hl
1931   14AD 13                  inc     de
1932   14AE AF                  xor     a
1933   14AF D3 04               out     ($04),a
1934   14B1 DB 03               in      a,($03)	; Read shift register
1935   14B3 F5                  push    af
1936   14B4 A6                  and     (hl)
1937   14B5 CA BD 14            jp      z,$L14BD
1938   14B8 3E 01               ld      a,$01
1939   14BA 32 61 20            ld      ($2061),a
1940   14BD F1          L14BD:  pop     af
1941   14BE B6                  or      (hl)
1942   14BF 77                  ld      (hl),a
1943   14C0 E1                  pop     hl
1944   14C1 01 20 00            ld      bc,$0020 
1945   14C4 09                  add     hl,bc
1946   14C5 C1                  pop     bc
1947   14C6 05                  dec     b
1948   14C7 C2 98 14            jp      nz,$L1498
1949   14CA C9                  ret
1950   14CB             
1951   14CB             ;=============================================================
1952   14CB             ; Clear a one byte sprite at HL. B=number of rows.
1953   14CB AF          L14CB:  xor     a		; 0
1954   14CC C5          L14CC:  push    bc		; Preserve BC
1955   14CD 77                  ld      (hl),a	; Clear screen byte
1956   14CE 01 20 00            ld      bc,$0020	; Bump HL ... 
1957   14D1 09                  add     hl,bc		; ... one screen row
1958   14D2 C1                  pop     bc		; Restore
1959   14D3 05                  dec     b		; All done?
1960   14D4 C2 CC 14            jp      nz,$L14CC	; No ... clear all
1961   14D7 C9                  ret
1962   14D8             
1963   14D8             ;=============================================================
1964   14D8             ;
1965   14D8 3A 25 20    L14D8:  ld      a,($2025)	; Player shot flag
1966   14DB FE 05               cp      $05		; Alien explosion in progress?
1967   14DD C8                  ret     z		; Yes ... ignore this function
1968   14DE FE 02               cp      $02
1969   14E0 C0                  ret     nz
1970   14E1 3A 29 20            ld      a,($2029)	; Get Y coordinate of player shot
1971   14E4 FE D8               cp      $d8
1972   14E6 47                  ld      b,a
1973   14E7 D2 30 15            jp      nc,$L1530	; If less than D8, set shot flag to 03 and ???
1974   14EA 3A 02 20            ld      a,($2002)
1975   14ED A7                  and     a
1976   14EE C8                  ret     z
1977   14EF 78                  ld      a,b		; Get original Y coordinate
1978   14F0 FE CE               cp      $ce
1979   14F2 D2 79 15            jp      nc,$L1579	; If less than CE, set 2085 to 3 ???
1980   14F5 C6 06               add     a,$06
1981   14F7 47                  ld      b,a
1982   14F8 3A 09 20            ld      a,($2009)
1983   14FB FE 90               cp      $90
1984   14FD D2 04 15            jp      nc,$L1504
1985   1500 B8                  cp      b
1986   1501 D2 30 15            jp      nc,$L1530
1987   1504 68          L1504:  ld      l,b
1988   1505 CD 62 15            call    $L1562
1989   1508 3A 2A 20            ld      a,($202a)
1990   150B 67                  ld      h,a
1991   150C CD 6F 15            call    $L156F		; Get alien's coordinate
1992   150F 22 64 20            ld      ($2064),hl	; Put it in the exploding-alien descriptor
1993   1512 3E 05               ld      a,$05		; Flag alien explosion ...
1994   1514 32 25 20            ld      ($2025),a	; ... in progress
1995   1517 CD 81 15            call    $L1581		; Get descriptor for alien
1996   151A 7E                  ld      a,(hl)	; Is alien ...
1997   151B A7                  and     a		; ... alive
1998   151C CA 30 15            jp      z,$L1530	; No ... skip
1999   151F 36 00               ld      (hl),$00	; Make alien invader dead
2000   1521 CD 5F 0A            call    $L0A5F		; ??? Makes alien explosion sound and other things ???
2001   1524 CD 3B 1A            call    $L1A3B		; Load 5 byte sprite descriptor
2002   1527 CD D3 15            call    $L15D3		; Draw explosion sprite on screen
2003   152A 3E 10               ld      a,$10		; Initiate alien-explosion
2004   152C 32 03 20            ld      ($2003),a	; ... timer
2005   152F C9                  ret     		; Out
2006   1530             
2007   1530 3E 03       L1530:  ld      a,$03
2008   1532 32 25 20            ld      ($2025),a
2009   1535 C3 4A 15            jp      $L154A
2010   1538             
2011   1538 21 03 20    L1538:  ld      hl,$2003	; Decrement explosion ...
2012   153B 35                  dec     (hl)		; ... timer
2013   153C C0                  ret     nz		; Not time ... out
2014   153D 2A 64 20            ld      hl,($2064)	; Pixel pointer for exploding alien
2015   1540 06 10               ld      b,$10		; 16 row pixel
2016   1542 CD 24 14            call    $L1424		; Clear the explosion sprite from the screen
2017   1545 3E 04       L1545:  ld      a,$04
2018   1547 32 25 20            ld      ($2025),a
2019   154A AF          L154A:  xor     a
2020   154B 32 02 20            ld      ($2002),a
2021   154E 06 F7               ld      b,$f7		; Turn off ...
2022   1550 C3 DC 19            jp      TurnOffSounds	; ... alien exploding sound
2023   1553             
2024   1553 00                  nop
2025   1554                 
2026   1554 0E 00       L1554:  ld      c,$00
2027   1556 BC                  cp      h
2028   1557 D4 90 15            call    nc,$L1590
2029   155A BC          L155A:  cp      h
2030   155B D0                  ret     nc
2031   155C C6 10               add     a,$10
2032   155E 0C                  inc     c
2033   155F C3 5A 15            jp      $L155A
2034   1562             
2035   1562 3A 09 20    L1562:  ld      a,($2009)
2036   1565 65                  ld      h,l
2037   1566 CD 54 15            call    $L1554
2038   1569 41                  ld      b,c
2039   156A 05                  dec     b
2040   156B DE 10               sbc     a,$10
2041   156D 6F                  ld      l,a
2042   156E C9                  ret
2043   156F             
2044   156F 3A 0A 20    L156F:  ld      a,($200a)
2045   1572 CD 54 15            call    $L1554
2046   1575 DE 10               sbc     a,$10
2047   1577 67                  ld      h,a
2048   1578 C9                  ret
2049   1579             
2050   1579 3E 01       L1579:  ld      a,$01
2051   157B 32 85 20            ld      ($2085),a
2052   157E C3 45 15            jp      $L1545
2053   1581             
2054   1581             ;=============================================================
2055   1581             ; Get pointer into 11 byte descriptor. A = structure number,
2056   1581             ; C = byte number (1 based).
2057   1581             ; A*11+C-1 -> L
2058   1581             ; ActivePlayer -> H
2059   1581 78          L1581:  ld      a,b		; Hold original
2060   1582 07                  rlca    		; *2
2061   1583 07                  rlca    		; *4
2062   1584 07                  rlca    		; *8
2063   1585 80                  add     a,b		; *9
2064   1586 80                  add     a,b		; *10
2065   1587 80                  add     a,b		; *11
2066   1588 81                  add     a,c		; Add offset into descriptor
2067   1589 3D                  dec     a		; -1
2068   158A 6F                  ld      l,a		; Set LSB of HL
2069   158B 3A 67 20            ld      a,(RAM_ActivePlayer)	; Set ...
2070   158E 67                  ld      h,a		; ... MSB of HL with active player indicator
2071   158F C9                  ret
2072   1590             
2073   1590 0C          L1590:  inc     c		; ++C
2074   1591 C6 10               add     a,$10		; Add 16 to A
2075   1593 FA 90 15            jp      m,$L1590	; Keep going if result is negative
2076   1596 C9                  ret     		; Out
2077   1597             
2078   1597 3A 0D 20    L1597:  ld      a,($200d)
2079   159A A7                  and     a
2080   159B C2 B7 15            jp      nz,$L15B7
2081   159E 21 A4 3E            ld      hl,$3ea4
2082   15A1 CD C5 15            call    $L15C5
2083   15A4 D0                  ret     nc
2084   15A5 06 FE               ld      b,$fe
2085   15A7 3E 01               ld      a,$01
2086   15A9 32 0D 20    L15A9:  ld      ($200d),a
2087   15AC 78                  ld      a,b
2088   15AD 32 08 20            ld      ($2008),a
2089   15B0 3A 0E 20            ld      a,($200e)
2090   15B3 32 07 20            ld      ($2007),a
2091   15B6 C9                  ret
2092   15B7             ;
2093   15B7 21 24 25    L15B7:  ld      hl,$2524
2094   15BA CD C5 15            call    $L15C5
2095   15BD D0                  ret     nc
2096   15BE CD F1 18            call    $L18F1
2097   15C1 AF                  xor     a
2098   15C2 C3 A9 15            jp      $L15A9
2099   15C5             ;
2100   15C5 06 17       L15C5:  ld      b,$17
2101   15C7 7E          L15C7:  ld      a,(hl)
2102   15C8 A7                  and     a
2103   15C9 C2 6B 16            jp      nz,$L166B
2104   15CC 23                  inc     hl
2105   15CD 05                  dec     b
2106   15CE C2 C7 15            jp      nz,$L15C7
2107   15D1 C9                  ret
2108   15D2             
2109   15D2 00                  nop
2110   15D3                 
2111   15D3             ;=============================================================
2112   15D3             ; Draw sprite at [DE] to screen at pixel position in HL
2113   15D3             ; The hardware shift register is used in converting pixel positions
2114   15D3             ; to screen coordinates.
2115   15D3 CD 74 14    L15D3:  call    $L1474		; Convert pixel number to screen/shift
2116   15D6 E5                  push    hl		; Preserve screen coordinate
2117   15D7 C5          L15D7:  push    bc		; Hold for a second
2118   15D8 E5                  push    hl		; Hold for a second
2119   15D9 1A                  ld      a,(de)	; From sprite data
2120   15DA D3 04               out     ($04),a	; Write data to shift register
2121   15DC DB 03               in      a,($03)	; Read back shifted amount
2122   15DE 77                  ld      (hl),a	; Shifted sprite to screen
2123   15DF 23                  inc     hl		; Adjacent cell
2124   15E0 13                  inc     de		; Next in sprite data
2125   15E1 AF                  xor     a		; 0
2126   15E2 D3 04               out     ($04),a	; Write 0 to shift register
2127   15E4 DB 03               in      a,($03)	; Read back remainder of previous
2128   15E6 77                  ld      (hl),a	; Write remainder to adjacent
2129   15E7 E1                  pop     hl		; Old screen coordinate
2130   15E8 01 20 00            ld      bc,$0020	; Offset screen ... 
2131   15EB 09                  add     hl,bc		; ... to next row
2132   15EC C1                  pop     bc		; Restore count
2133   15ED 05                  dec     b		; All done?
2134   15EE C2 D7 15            jp      nz,$L15D7	; No ... do all
2135   15F1 E1                  pop     hl		; Restore HL
2136   15F2 C9                  ret     		; Done
2137   15F3             
2138   15F3             ;=============================================================
2139   15F3             ; Count number of aliens remaining in active game and return count
2140   15F3             ; 2082 holds the current count
2141   15F3             ; If only 1, 206b gets a flag of 1
2142   15F3 CD 11 16    L15F3:  call    $L1611		; Get active player descriptor
2143   15F6 01 00 37            ld      bc,$3700	; B=55 aliens to check?
2144   15F9 7E          L15F9:  ld      a,(hl)	; Get byte
2145   15FA A7                  and     a		; Is it a zero?
2146   15FB CA FF 15            jp      z,$L15FF	; Yes ... don't count it
2147   15FE 0C                  inc     c		; Count the zeros
2148   15FF 23          L15FF:  inc     hl		; Next slot
2149   1600 05                  dec     b		; Count ...
2150   1601 C2 F9 15            jp      nz,$L15F9	; ... all alien indicators
2151   1604 79                  ld      a,c		; Get the count
2152   1605 32 82 20            ld      ($2082),a	; Hold it
2153   1608 FE 01               cp      $01		; Just one?
2154   160A C0                  ret     nz		; No keep going
2155   160B 21 6B 20            ld      hl,$206b	; ???
2156   160E 36 01               ld      (hl),$01	; ???
2157   1610 C9                  ret     		; Out
2158   1611             
2159   1611             ;=============================================================
2160   1611             ; Set HL with 0000 if player 1 is active
2161   1611             ; or 0100 if player 2 is active
2162   1611 2E 00       L1611:  ld      l,$00		; Byte boundary
2163   1613 3A 67 20            ld      a,(RAM_ActivePlayer)	; Active player number
2164   1616 67                  ld      h,a		; Set HL to data
2165   1617 C9                  ret     		; Done
2166   1618             
2167   1618             ;=============================================================
2168   1618             ; Initiate player fire if button is pressed.
2169   1618             ; Demo commands are parsed here if in demo mode
2170   1618 3A 15 20    L1618:  ld      a,($2015)	; Is there an active player?
2171   161B FE FF               cp      $ff		; FF = alive
2172   161D C0                  ret     nz		; Player has been shot - no firing
2173   161E 21 10 20            ld      hl,$2010
2174   1621 7E                  ld      a,(hl)
2175   1622 23                  inc     hl
2176   1623 46                  ld      b,(hl)
2177   1624 B0                  or      b
2178   1625 C0                  ret     nz
2179   1626 3A 25 20            ld      a,($2025)	; Does the player have ...
2180   1629 A7                  and     a		; ... a shot on the screen?
2181   162A C0                  ret     nz		; Yes ... ignore
2182   162B 3A EF 20            ld      a,($20ef)	; Demo play flag
2183   162E A7                  and     a		; Is demo playing?
2184   162F CA 52 16            jp      z,$L1652	; Yes ...
2185   1632 3A 2D 20            ld      a,($202d)	; Is fire button being held down?
2186   1635 A7                  and     a		; ...
2187   1636 C2 48 16            jp      nz,$L1648	; Yes ... wait for bounce
2188   1639 CD C0 17            call    $L17C0		; Read active player controls
2189   163C E6 10               and     $10		; Fire-button pressed?
2190   163E C8                  ret     z		; No ... out
2191   163F 3E 01               ld      a,$01		; Flag
2192   1641 32 25 20            ld      ($2025),a	; Flag shot active
2193   1644 32 2D 20            ld      ($202d),a	; Flag that fire button is down
2194   1647 C9                  ret     		; Out
2195   1648 CD C0 17    L1648:  call    $L17C0		; Read active player controls
2196   164B E6 10               and     $10		; Fire-button pressed?
2197   164D C0                  ret     nz		; Yes ... ignore
2198   164E 32 2D 20            ld      ($202d),a	; Else ... clear flag
2199   1651 C9                  ret     		; Out
2200   1652             ; Handle demo (constant fire, parse demo commands)
2201   1652 21 25 20    L1652:  ld      hl,$2025	; Demo fires ...
2202   1655 36 01               ld      (hl),$01	; ... constantly
2203   1657 2A ED 20            ld      hl,($20ed)	; Demo command bufer
2204   165A 23                  inc     hl		; Next position
2205   165B 7D                  ld      a,l		; Command buffer ...
2206   165C FE 7E               cp      $7e		; ... wraps around
2207   165E DA 63 16            jp      c,$L1663	; ... Buffer from 1F74 to 1F7E
2208   1661 2E 74               ld      l,$74		; ... overflow
2209   1663 22 ED 20    L1663:  ld      ($20ed),hl	; Next demo command
2210   1666 7E                  ld      a,(hl)	; Get next command
2211   1667 32 1D 20            ld      ($201d),a	; Set command for movement
2212   166A C9                  ret     		; Done
2213   166B             
2214   166B 37          L166B:  scf
2215   166C C9                  ret
2216   166D             
2217   166D AF          L166D:  xor     a
2218   166E CD 8B 1A            call    $L1A8B
2219   1671 CD 10 19    L1671:  call    $L1910
2220   1674 36 00               ld      (hl),$00
2221   1676 CD CA 09            call    $L09CA
2222   1679 23                  inc     hl
2223   167A 11 F5 20            ld      de,$20f5
2224   167D 1A                  ld      a,(de)
2225   167E BE                  cp      (hl)
2226   167F 1B                  dec     de
2227   1680 2B                  dec     hl
2228   1681 1A                  ld      a,(de)
2229   1682 CA 8B 16            jp      z,$L168B
2230   1685 D2 98 16            jp      nc,$L1698
2231   1688 C3 8F 16            jp      $L168F
2232   168B BE          L168B:  cp      (hl)
2233   168C D2 98 16            jp      nc,$L1698
2234   168F 7E          L168F:  ld      a,(hl)
2235   1690 12                  ld      (de),a
2236   1691 13                  inc     de
2237   1692 23                  inc     hl
2238   1693 7E                  ld      a,(hl)
2239   1694 12                  ld      (de),a
2240   1695 CD 50 19            call    $L1950
2241   1698 3A CE 20    L1698:  ld      a,($20ce)	; Number of players
2242   169B A7                  and     a		; Is this a single player game?
2243   169C CA C9 16            jp      z,$L16C9	; Yes ... short message
2244   169F 21 03 28            ld      hl,$2803	; Screen coordinates
2245   16A2 11 A6 1A            ld      de,ROM_MsgGameOver	; "GAME OVER PLAYER< >"
2246   16A5 0E 14               ld      c,$14		; 20 characters
2247   16A7 CD 93 0A            call    $L0A93		; Print message
2248   16AA 25                  dec     h		; Back up ...
2249   16AB 25                  dec     h		; ... to player indicator
2250   16AC 06 1B               ld      b,$1b		; "1"
2251   16AE 3A 67 20            ld      a,(RAM_ActivePlayer)	; Player number
2252   16B1 0F                  rrca    		; Is this player 1?
2253   16B2 DA B7 16            jp      c,$L16B7	; Yes ... keep the digit
2254   16B5 06 1C               ld      b,$1c		; Else ... set digit 2
2255   16B7 78          L16B7:  ld      a,b		; To A
2256   16B8 CD FF 08            call    $L08FF		; Print player number
2257   16BB CD B1 0A            call    $L0AB1		; Short delay
2258   16BE CD E7 18            call    $L18E7
2259   16C1 7E                  ld      a,(hl)
2260   16C2 A7                  and     a
2261   16C3 CA C9 16            jp      z,$L16C9
2262   16C6 C3 ED 02            jp      $L02ED
2263   16C9             ;
2264   16C9 21 18 2D    L16C9:  ld      hl,$2d18	; Screen coordinates
2265   16CC 11 A6 1A            ld      de,ROM_MsgGameOver	; "GAME OVER PLAYER< >" 
2266   16CF 0E 0A               ld      c,$0a		; Just the "GAME OVER" part
2267   16D1 CD 93 0A            call    $L0A93		; Print message
2268   16D4 CD B6 0A            call    $L0AB6		; Long delay
2269   16D7 CD D6 09            call    $L09D6		; Clear center window
2270   16DA AF                  xor     a
2271   16DB 32 EF 20            ld      ($20ef),a
2272   16DE D3 05               out     ($05),a	; Sound
2273   16E0 CD D1 19            call    $L19D1		; Set 20E9 flag to 1
2274   16E3 C3 89 0B            jp      $L0B89
2275   16E6             
2276   16E6 31 00 24    L16E6:  ld      sp,$2400	; Reset stack
2277   16E9 FB                  ei      		; Enable interrupts
2278   16EA AF                  xor     a		; Flag ...
2279   16EB 32 15 20            ld      ($2015),a	; ... player is shot
2280   16EE CD D8 14    L16EE:  call    $L14D8
2281   16F1 06 04               ld      b,$04		; Player hit ...
2282   16F3 CD FA 18            call    TurnOnSounds	; ... sound
2283   16F6 CD 59 0A            call    $L0A59		; Has flag been set?
2284   16F9 C2 EE 16            jp      nz,$L16EE	; No ... wait for the flag
2285   16FC CD D7 19            call    $L19D7
2286   16FF 21 01 27            ld      hl,$2701
2287   1702 CD FA 19            call    $L19FA
2288   1705 AF                  xor     a
2289   1706 CD 8B 1A            call    $L1A8B
2290   1709 06 FB               ld      b,$fb
2291   170B C3 6B 19            jp      $L196B
2292   170E CD CA 09    L170E:  call    $L09CA
2293   1711 23                  inc     hl
2294   1712 7E                  ld      a,(hl)
2295   1713 11 B8 1C            ld      de,$1cb8 ; -- POSSIBLE LABEL --
2296   1716 21 A1 1A            ld      hl,$1aa1	; ; -- POSSIBLE LABEL --
2297   1719 0E 04               ld      c,$04
2298   171B 47                  ld      b,a
2299   171C 1A          L171C:  ld      a,(de)
2300   171D B8                  cp      b
2301   171E D2 27 17            jp      nc,$L1727
2302   1721 23                  inc     hl
2303   1722 13                  inc     de
2304   1723 0D                  dec     c
2305   1724 C2 1C 17            jp      nz,$L171C
2306   1727 7E          L1727:  ld      a,(hl)
2307   1728 32 CF 20            ld      ($20cf),a
2308   172B C9                  ret
2309   172C             
2310   172C             ;=============================================================
2311   172C             ; Shot sound on or off depending on 2025
2312   172C 3A 25 20    L172C:  ld      a,($2025)	; Player shot flag
2313   172F FE 00               cp      $00		; Active shot?
2314   1731 C2 39 17            jp      nz,$L1739	; Yes ... go
2315   1734 06 FD               ld      b,$fd		; Turn player shot ...
2316   1736 C3 DC 19            jp      TurnOffSounds	; ... sound off
2317   1739             ;
2318   1739 06 02       L1739:  ld      b,$02		; Player shot ...
2319   173B C3 FA 18            jp      TurnOnSounds	; ... sound on
2320   173E             
2321   173E             
2322   173E 00                  nop
2323   173F 00                  nop
2324   1740 21 9B 20    L1740:  ld      hl,$209b
2325   1743 35                  dec     (hl)
2326   1744 CC 6D 17            call    z,$L176D
2327   1747 3A 68 20            ld      a,($2068)
2328   174A A7                  and     a
2329   174B CA 6D 17            jp      z,$L176D
2330   174E 21 96 20            ld      hl,$2096
2331   1751 35                  dec     (hl)
2332   1752 C0                  ret     nz
2333   1753             
2334   1753 21 98 20            ld      hl,$2098
2335   1756 7E                  ld      a,(hl)
2336   1757 D3 05               out     ($05),a	; Sound
2337   1759 3A 82 20            ld      a,($2082)	; Number of aliens on active screen
2338   175C A7                  and     a		; Is is zero?
2339   175D CA 6D 17            jp      z,$L176D
2340   1760 2B                  dec     hl
2341   1761 7E                  ld      a,(hl)
2342   1762 2B                  dec     hl
2343   1763 77                  ld      (hl),a
2344   1764 2B                  dec     hl
2345   1765 36 01               ld      (hl),$01
2346   1767 3E 04               ld      a,$04
2347   1769 32 9B 20            ld      ($209b),a
2348   176C C9                  ret
2349   176D             
2350   176D 3A 98 20    L176D:  ld      a,($2098)
2351   1770 E6 30       L1770:  and     $30
2352   1772 D3 05               out     ($05),a	; Sound
2353   1774 C9                  ret
2354   1775             
2355   1775             ;=============================================================
2356   1775             ;  ??? Called from game loop 
2357   1775 3A 95 20    L1775:  ld      a,($2095)
2358   1778 A7                  and     a
2359   1779 CA AA 17            jp      z,$L17AA
2360   177C 21 11 1A            ld      hl,$1a11 ; -- POSSIBLE LABEL --
2361   177F 11 21 1A            ld      de,$1a21 ; -- POSSIBLE LABEL --
2362   1782 3A 82 20            ld      a,($2082)
2363   1785 BE          L1785:  cp      (hl)
2364   1786 D2 8E 17            jp      nc,$L178E
2365   1789 23                  inc     hl
2366   178A 13                  inc     de
2367   178B C3 85 17            jp      $L1785
2368   178E 1A          L178E:  ld      a,(de)
2369   178F 32 97 20            ld      ($2097),a
2370   1792 21 98 20            ld      hl,$2098
2371   1795 7E                  ld      a,(hl)
2372   1796 E6 30               and     $30
2373   1798 47                  ld      b,a
2374   1799 7E                  ld      a,(hl)
2375   179A E6 0F               and     $0f
2376   179C 07                  rlca
2377   179D FE 10               cp      $10
2378   179F C2 A4 17            jp      nz,$L17A4
2379   17A2 3E 01               ld      a,$01
2380   17A4 B0          L17A4:  or      b
2381   17A5 77                  ld      (hl),a
2382   17A6 AF                  xor     a		; Clear ...
2383   17A7 32 95 20            ld      ($2095),a	; ... ??? something to do with shot
2384   17AA 21 99 20    L17AA:  ld      hl,$2099	; Sound timer for award extra ship
2385   17AD 35                  dec     (hl)		; Time ?
2386   17AE C0                  ret     nz		; No ... leave sound playing
2387   17AF 06 EF               ld      b,$ef		; Turn off ...
2388   17B1 C3 DC 19            jp      TurnOffSounds	; ... extra ship sound
2389   17B4             
2390   17B4             ;=============================================================
2391   17B4 06 EF               ld      b,$ef
2392   17B6 21 98 20            ld      hl,$2098
2393   17B9 7E                  ld      a,(hl)
2394   17BA A0                  and     b
2395   17BB 77                  ld      (hl),a
2396   17BC D3 05               out     ($05),a	; Sound
2397   17BE C9                  ret
2398   17BF             
2399   17BF 00                  nop
2400   17C0             
2401   17C0             ;=============================================================
2402   17C0             ; Read control inputs for active player
2403   17C0 3A 67 20    L17C0:  ld      a,(RAM_ActivePlayer)	; Get active player
2404   17C3 0F                  rrca    		; Test player
2405   17C4 D2 CA 17            jp      nc,$L17CA	; Player 2 ... read port 2
2406   17C7 DB 01               in      a,($01)	        ; Player 1 ... read port 1
2407   17C9 C9                  ret     		; Out
2408   17CA DB 02       L17CA:  in      a,($02)	        ; Get controls for player 2
2409   17CC C9                  ret     		; Out
2410   17CD             
2411   17CD             ;=============================================================
2412   17CD             ; Check and handle TILT
2413   17CD             ;+CheckAndHandleTilt
2414   17CD DB 02       L17CD:  in      a,($02)	        ; Read input port
2415   17CF E6 04               and     $04		; Tilt?
2416   17D1 C8                  ret     z		; No tilt ... return
2417   17D2 3A 9A 20            ld      a,(RAM_IsTilt)	; Already in TILT handle?
2418   17D5 A7                  and     a		; 1 = yes
2419   17D6 C0                  ret     nz		; Yes ... ignore it now
2420   17D7 31 00 24            ld      sp,$2400	; Reset stack
2421   17DA 06 04               ld      b,$04		; Do this 4 times
2422   17DC CD D6 09    L17DC:  call    $L09D6		; Clear center window
2423   17DF 05                  dec     b		; All done?
2424   17E0 C2 DC 17            jp      nz,$L17DC	; No ... do again
2425   17E3 3E 01               ld      a,$01		; Flag ...
2426   17E5 32 9A 20            ld      (RAM_IsTilt),a	; ... handling TILT
2427   17E8 CD D7 19            call    $L19D7
2428   17EB FB                  ei      		; Re-enable interrupts
2429   17EC 11 BC 1C            ld      de,ROM_MsgTilt	; Message "TILT" 
2430   17EF 21 16 30            ld      hl,$3016	; Center of screen
2431   17F2 0E 04               ld      c,$04		; Four letters
2432   17F4 CD 93 0A            call    $L0A93		; Print "TILT"
2433   17F7 CD B1 0A            call    $L0AB1		; Short delay
2434   17FA AF                  xor     a		; Zero
2435   17FB 32 9A 20            ld      (RAM_IsTilt),a	; TILT handle over
2436   17FE 32 93 20            ld      ($2093),a
2437   1801 C3 C9 16            jp      $L16C9		; Handle game over for player
2438   1804             
2439   1804             ;=============================================================
2440   1804             ; Called from game loop
2441   1804 21 84 20    L1804:  ld      hl,$2084
2442   1807 7E                  ld      a,(hl)
2443   1808 A7                  and     a
2444   1809 CA 07 07            jp      z,$L0707
2445   180C 23                  inc     hl
2446   180D 7E                  ld      a,(hl)
2447   180E A7                  and     a
2448   180F C0                  ret     nz
2449   1810 06 01               ld      b,$01         ; UFO sound ...
2450   1812 C3 FA 18            jp      TurnOnSounds  ; ... on and repeats until stopped
2451   1815 21 10 28    L1815:  ld      hl,$2810
2452   1818 11 A3 1C            ld      de,$1ca3 ; -- POSSIBLE LABEL --
2453   181B 0E 15               ld      c,$15
2454   181D CD F3 08            call    $L08F3
2455   1820 3E 0A               ld      a,$0a
2456   1822 32 6C 20            ld      ($206c),a
2457   1825 01 BE 1D            ld      bc,$1dbe ; -- POSSIBLE LABEL --
2458   1828 CD 56 18    L1828:  call    $L1856
2459   182B DA 37 18            jp      c,$L1837
2460   182E CD 44 18            call    $L1844
2461   1831 C3 28 18            jp      $L1828
2462   1834 CD B1 0A            call    $L0AB1
2463   1837 01 CF 1D    L1837:  ld      bc,$1dcf ; -- POSSIBLE LABEL --
2464   183A CD 56 18    L183A:  call    $L1856
2465   183D D8                  ret     c
2466   183E CD 4C 18            call    $L184C
2467   1841 C3 3A 18            jp      $L183A
2468   1844             ;
2469   1844 C5          L1844:  push    bc
2470   1845 06 10               ld      b,$10
2471   1847 CD 39 14            call    $L1439
2472   184A C1                  pop     bc
2473   184B C9                  ret
2474   184C             ;
2475   184C C5          L184C:  push    bc
2476   184D 3A 6C 20            ld      a,($206c)
2477   1850 4F                  ld      c,a
2478   1851 CD 93 0A            call    $L0A93
2479   1854 C1                  pop     bc
2480   1855 C9                  ret
2481   1856             
2482   1856             ;=============================================================
2483   1856 0A          L1856:  ld      a,(bc)
2484   1857 FE FF               cp      $ff
2485   1859 37                  scf
2486   185A C8                  ret     z
2487   185B             
2488   185B 6F                  ld      l,a
2489   185C 03                  inc     bc
2490   185D 0A                  ld      a,(bc)
2491   185E 67                  ld      h,a
2492   185F 03                  inc     bc
2493   1860 0A                  ld      a,(bc)
2494   1861 5F                  ld      e,a
2495   1862 03                  inc     bc
2496   1863 0A                  ld      a,(bc)
2497   1864 57                  ld      d,a
2498   1865 03                  inc     bc
2499   1866 A7                  and     a
2500   1867 C9                  ret
2501   1868             
2502   1868 21 C2 20    L1868:  ld      hl,$20c2
2503   186B 34                  inc     (hl)
2504   186C 23                  inc     hl
2505   186D 4E                  ld      c,(hl)
2506   186E CD D9 01            call    $L01D9
2507   1871 47                  ld      b,a
2508   1872 3A CA 20            ld      a,($20ca)
2509   1875 B8                  cp      b
2510   1876 CA 98 18            jp      z,$L1898
2511   1879 3A C2 20            ld      a,($20c2)
2512   187C E6 04               and     $04
2513   187E 2A CC 20            ld      hl,($20cc)
2514   1881 C2 88 18            jp      nz,$L1888
2515   1884 11 30 00            ld      de,$0030 
2516   1887 19                  add     hl,de
2517   1888 22 C7 20    L1888:  ld      ($20c7),hl
2518   188B 21 C5 20            ld      hl,$20c5
2519   188E CD 3B 1A            call    $L1A3B
2520   1891 EB                  ex      de,hl
2521   1892 C3 D3 15            jp      $L15D3
2522   1895 00                  nop
2523   1896 00                  nop
2524   1897 00                  nop
2525   1898 3E 01       L1898:  ld      a,$01
2526   189A 32 CB 20            ld      ($20cb),a
2527   189D C9                  ret
2528   189E             
2529   189E 21 50 20    L189E:  ld      hl,$2050
2530   18A1 11 C0 1B            ld      de,$1bc0 ; -- POSSIBLE LABEL --
2531   18A4 06 10               ld      b,$10
2532   18A6 CD 32 1A            call    BlockMoveDEtoHL
2533   18A9 3E 02               ld      a,$02
2534   18AB 32 80 20            ld      ($2080),a
2535   18AE 3E FF               ld      a,$ff
2536   18B0 32 7E 20            ld      ($207e),a
2537   18B3 3E 04               ld      a,$04
2538   18B5 32 C1 20            ld      ($20c1),a
2539   18B8 3A 55 20    L18B8:  ld      a,($2055)
2540   18BB E6 01               and     $01
2541   18BD CA B8 18            jp      z,$L18B8
2542   18C0 3A 55 20    L18C0:  ld      a,($2055)
2543   18C3 E6 01               and     $01
2544   18C5 C2 C0 18            jp      nz,$L18C0
2545   18C8 21 11 33            ld      hl,$3311
2546   18CB 3E 26               ld      a,$26
2547   18CD 00                  nop
2548   18CE CD FF 08            call    $L08FF
2549   18D1 C3 B6 0A            jp      $L0AB6
2550   18D4             
2551   18D4             ;=============================================================
2552   18D4             ; Initializiation comes here
2553   18D4             ;
2554   18D4 31 00 24    START:  ld      sp,$2400	; Set stack pointer just below screen
2555   18D7 06 00               ld      b,$00		; Count 256 bytes
2556   18D9 CD E6 01            call    $L01E6		; Copy ROM to RAM
2557   18DC CD 56 19            call    $L1956		; Print scores and credits
2558   18DF 3E 08       L18DF:  ld      a,$08
2559   18E1 32 CF 20            ld      ($20cf),a
2560   18E4 C3 EA 0A            jp      $L0AEA
2561   18E7             
2562   18E7             ;=============================================================
2563   18E7             ; ??? See 1910
2564   18E7 3A 67 20    L18E7:  ld      a,(RAM_ActivePlayer)	; Player indicator
2565   18EA 21 E7 20            ld      hl,$20e7	; Strange descriptor
2566   18ED 0F                  rrca
2567   18EE D0                  ret     nc
2568   18EF 23                  inc     hl
2569   18F0 C9                  ret
2570   18F1             
2571   18F1 06 02       L18F1:  ld      b,$02
2572   18F3 3A 82 20            ld      a,($2082)
2573   18F6 3D                  dec     a
2574   18F7 C0                  ret     nz
2575   18F8 04                  inc     b
2576   18F9 C9                  ret
2577   18FA             
2578   18FA             ;=============================================================
2579   18FA             ; Add in bit for sound
2580   18FA             TurnOnSounds:
2581   18FA 3A 94 20            ld      a,($RAM_SoundPortValue)
2582   18FD B0                  or      b
2583   18FE 32 94 20            ld      ($RAM_SoundPortValue),a
2584   1901 D3 03               out     ($03),a	; Sound
2585   1903 C9                  ret
2586   1904             
2587   1904 21 00 22    L1904:  ld      hl,$2200
2588   1907 C3 C3 01            jp      $L01C3
2589   190A             
2590   190A             ;=============================================================
2591   190A             ; Called from main game loop (collision detection for player shot ???)
2592   190A CD D8 14    L190A:  call    $L14D8
2593   190D C3 97 15            jp      $L1597
2594   1910             
2595   1910             ;=============================================================
2596   1910             ; ??? See 18E7
2597   1910 21 E7 20    L1910:  ld      hl,$20e7
2598   1913 3A 67 20            ld      a,(RAM_ActivePlayer)	; Player 1 or 2
2599   1916 0F                  rrca    		; Test
2600   1917 D8                  ret     c		; Return if player 1
2601   1918 23                  inc     hl		; Bump to next ???
2602   1919 C9                  ret     		; Return
2603   191A             
2604   191A             ;=============================================================
2605   191A             ; Print score header " SCORE<1> HI-SCORE SCORE<2> "
2606   191A 0E 1C       L191A:  ld      c,$1c		; 28 bytes in message
2607   191C 21 1E 24            ld      hl,$241e	; Screen coordinates
2608   191F 11 E4 1A            ld      de,ROM_MsgScore	; Score header message
2609   1922 C3 F3 08            jp      $L08F3		; Print score header
2610   1925             
2611   1925 21 F8 20    L1925:  ld      hl,$20f8	; Player 1 score descriptor
2612   1928 C3 31 19            jp      $L1931		; Print score
2613   192B             
2614   192B 21 FC 20    L192B:  ld      hl,$20fc	; Player 2 score descriptor
2615   192E C3 31 19            jp      $L1931		; Print score
2616   1931             
2617   1931             ;=============================================================
2618   1931             ; Print score.
2619   1931             ; HL = descriptor
2620   1931 5E          L1931:  ld      e,(hl)	; Get score LSB
2621   1932 23                  inc     hl		; Next
2622   1933 56                  ld      d,(hl)	; Get score MSB
2623   1934 23                  inc     hl		; Next
2624   1935 7E                  ld      a,(hl)	; Get coordinate LSB
2625   1936 23                  inc     hl		; Next
2626   1937 66                  ld      h,(hl)	; Get coordiante MSB
2627   1938 6F                  ld      l,a		; Set LSB
2628   1939 C3 AD 09            jp      $L09AD		; Print 4 digits in DE
2629   193C             
2630   193C             ;=============================================================
2631   193C             ; Print message "CREDIT "
2632   193C 0E 07       L193C:  ld      c,$07		; 7 bytes in message
2633   193E 21 01 35            ld      hl,$3501	; Screen coordinates
2634   1941 11 A9 1F            ld      de,ROM_MsgCredit	; Message = "CREDIT " 
2635   1944 C3 F3 08            jp      $L08F3
2636   1947             
2637   1947             ;=============================================================
2638   1947             ; Display number of credits on screen
2639   1947 3A EB 20    L1947:  ld      a,(RAM_NumCredits)	; Number of credits
2640   194A 21 01 3C            ld      hl,$3c01	; Screen coordinates
2641   194D C3 B2 09            jp      $L09B2		; Character to screen
2642   1950             
2643   1950             ;=============================================================
2644   1950 21 F4 20    L1950:  ld      hl,$20f4	; Hi Score descriptor
2645   1953 C3 31 19            jp      $L1931		; Print Hi-Score
2646   1956             
2647   1956             ;=============================================================
2648   1956             ; Print scores (with header) and credits (with label)
2649   1956 CD 5C 1A    L1956:  call    $L1A5C		; Clear 2 rows on the screen
2650   1959 CD 1A 19            call    $L191A		; Print score header
2651   195C CD 25 19            call    $L1925		; Print player 1 score
2652   195F CD 2B 19            call    $L192B		; Print player 2 score
2653   1962 CD 50 19            call    $L1950		; Print hi score
2654   1965 CD 3C 19            call    $L193C		; Print credit lable
2655   1968 C3 47 19            jp      $L1947		; Number of credits
2656   196B             
2657   196B             ;=============================================================
2658   196B CD DC 19    L196B:  call    TurnOffSounds  
2659   196E C3 71 16            jp      $L1671
2660   1971 3E 01       L1971:  ld      a,$01
2661   1973 32 6D 20            ld      ($206d),a
2662   1976 C3 E6 16            jp      $L16E6
2663   1979             
2664   1979 CD D7 19    L1979:  call    $L19D7		;
2665   197C CD 47 19            call    $L1947		; Display number of credits on screen
2666   197F C3 3C 19            jp      $L193C		; Print message "CREDIT"
2667   1982             
2668   1982 32 C1 20    L1982:  ld      ($20c1),a
2669   1985 C9                  ret
2670   1986             
2671   1986 8B                  adc     a,e
2672   1987 19                  add     hl,de
2673   1988 C3 D6 09    L1988:  jp      $L09D6
2674   198B             
2675   198B             ;=============================================================
2676   198B             ; Print "*TAITO CORPORATION*"
2677   198B 21 03 28            ld      hl,$2803	; Screen coordinates
2678   198E 11 BE 19            ld      de,ROM_MsgTaitoCorp	; Message "*TAITO CORPORATION*" 
2679   1991 0E 13               ld      c,$13		; Messgae length
2680   1993 C3 F3 08            jp      $L08F3		; Print message
2681   1996             
2682   1996 00                  nop
2683   1997 00                  nop
2684   1998 00                  nop
2685   1999 00                  nop
2686   199A 3A 1E 20    L199A:  ld      a,($201e)
2687   199D A7                  and     a
2688   199E C2 AC 19            jp      nz,$L19AC
2689   19A1 DB 01               in      a,($01)
2690   19A3 E6 76               and     $76
2691   19A5 D6 72               sub     $72
2692   19A7 C0                  ret     nz
2693   19A8 3C                  inc     a
2694   19A9 32 1E 20            ld      ($201e),a
2695   19AC DB 01       L19AC:  in      a,($01)
2696   19AE E6 76               and     $76
2697   19B0 FE 34               cp      $34
2698   19B2 C0                  ret     nz
2699   19B3             
2700   19B3 21 1B 2E            ld      hl,$2e1b	; Coordinate
2701   19B6 11 F7 0B            ld      de,ROM_MsgTaitoCop	; Message = "TAITO COP" 
2702   19B9 0E 09               ld      c,$09		; Message length
2703   19BB C3 F3 08            jp      $L08F3		; Print message
2704   19BE             
2705   19BE             ROM_MsgTaitoCorp: ; Text message "*TAITO CORPORATION*"
2706   19BE 28 13 00 08         .db     $28,$13,$00,$08,$13,$0e,$26,$02,$0e,$11,$0f,$0e,$11
2706   19C2 13 0E 26 02 
2706   19C6 0E 11 0F 0E 
2706   19CA 11 
2707   19CB 00 13 08 0E         .db     $00,$13,$08,$0e,$0d,$28
2707   19CF 0D 28 
2708   19D1             
2709   19D1             ;=============================================================
2710   19D1             ; Set 20E9 flag
2711   19D1 3E 01       L19D1:  ld     a,$01		; Set 20e9
2712   19D3 32 E9 20    L19D3:  ld     ($20e9),a	;
2713   19D6 C9                  ret			;
2714   19D7             
2715   19D7             ;=============================================================
2716   19D7             ; Clear 20E9 flag
2717   19D7 AF          L19D7:  xor     a		; Clear 20e9
2718   19D8 C3 D3 19            jp      $L19D3		;
2719   19DB 00                  nop
2720   19DC             ; TOPHER ... talk about this ... do we really save that much code space? it takes more time
2721   19DC              
2722   19DC             
2723   19DC             ;=============================================================
2724   19DC             ; Turn off bit in sound port
2725   19DC             TurnOffSounds:
2726   19DC 3A 94 20            ld      a,($RAM_SoundPortValue)
2727   19DF A0                  and     b
2728   19E0 32 94 20            ld      ($RAM_SoundPortValue),a
2729   19E3 D3 03               out     ($03),a	    ; Sound
2730   19E5 C9                  ret
2731   19E6              
2732   19E6             
2733   19E6             ;=============================================================
2734   19E6             ; Show ships remaining in hold for the player
2735   19E6             ShowShipsRemaining:    ; A=number of ships (Z set if none)
2736   19E6             
2737   19E6 21 01 27            ld      hl,$2701	; Screen coordinates
2738   19E9 CA FA 19            jp      z,$L19FA	; None in reserve ... skip display
2739   19EC             ; TOPHER Talk about this ... wouldn't it be better to check BEFORE loading HL ?
2740   19EC             
2741   19EC             ; Draw line of ships
2742   19EC 11 60 1C    L19EC:  ld      de,ROM_PlayerSprite	; Player sprite ; -- POSSIBLE LABEL --
2743   19EF 06 10               ld      b,$10		; 16 rows
2744   19F1 4F                  ld      c,a		; Hold count
2745   19F2 CD 39 14            call    $L1439		; Display 1byte sprite to screen
2746   19F5 79                  ld      a,c		; Restore remaining
2747   19F6 3D                  dec     a		; All done?
2748   19F7 C2 EC 19            jp      nz,$L19EC	; No ... keep going
2749   19FA             ; Clear remainder of line
2750   19FA 06 10       L19FA:  ld      b,$10		; 16 rows
2751   19FC CD CB 14            call    $L14CB		; Clear 1byte sprite at HL
2752   19FF 7C                  ld      a,h		; Get Y coordinate
2753   1A00 FE 35               cp      $35		; At edge?
2754   1A02 C2 FA 19            jp      nz,$L19FA	; No ... do all
2755   1A05 C9                  ret
2756   1A06             
2757   1A06             
2758   1A06             ;=============================================================
2759   1A06             ; Compare upper bit at [DE] with upper bit at [2072]
2760   1A06             ; CF=0 if they are different. CF=1 if they are the same.
2761   1A06 21 72 20    L1A06:  ld      hl,$2072
2762   1A09 46                  ld      b,(hl)
2763   1A0A 1A                  ld      a,(de)
2764   1A0B E6 80               and     $80
2765   1A0D A8                  xor     b
2766   1A0E C0                  ret     nz
2767   1A0F 37                  scf
2768   1A10 C9                  ret
2769   1A11             
2770   1A11 32 2B 24 1C L1A11:  .db     $32,$2b,$24,$1c,$16,$11,$0d,$0a,$08,$07,$06,$05,$04,$03,$02,$01
2770   1A15 16 11 0D 0A 
2770   1A19 08 07 06 05 
2770   1A1D 04 03 02 01 
2771   1A21 34 2E 27 22 L1A21:  .db     $34,$2e,$27,$22,$1c,$18,$15,$13,$10,$0e,$0d,$0c,$0b,$09,$07,$05
2771   1A25 1C 18 15 13 
2771   1A29 10 0E 0D 0C 
2771   1A2D 0B 09 07 05 
2772   1A31 FF                  .db     $ff
2773   1A32             
2774   1A32             ;=============================================================
2775   1A32             ; Copy from [DE] to [HL] (b bytes)
2776   1A32             BlockMoveDEtoHL:
2777   1A32 1A                  ld      a,(de)	        ; Copy from [DE] to ...
2778   1A33 77                  ld      (hl),a	        ; ... [HL]
2779   1A34 23                  inc     hl		;
2780   1A35 13                  inc     de		;
2781   1A36 05                  dec     b		; Count in B
2782   1A37 C2 32 1A            jp      nz,BlockMoveDEtoHL	; Do all
2783   1A3A C9                  ret
2784   1A3B             
2785   1A3B             ;=============================================================
2786   1A3B             ; Load 5 bytes from [HL] and hold them in this order:
2787   1A3B             ; edlhb
2788   1A3B 5E          L1A3B:  ld      e,(hl)
2789   1A3C 23                  inc     hl
2790   1A3D 56                  ld      d,(hl)
2791   1A3E 23                  inc     hl
2792   1A3F 7E                  ld      a,(hl)
2793   1A40 23                  inc     hl
2794   1A41 4E                  ld      c,(hl)
2795   1A42 23                  inc     hl
2796   1A43 46                  ld      b,(hl)
2797   1A44 61                  ld      h,c
2798   1A45 6F                  ld      l,a
2799   1A46 C9                  ret
2800   1A47             
2801   1A47             ;=============================================================
2802   1A47             ; Convert from pixel number to screen coordinates (without shift)
2803   1A47             ; Shift HL right 3 bits (clearing the top 2 bits)
2804   1A47             ; and set the third bit from the left.
2805   1A47 C5          L1A47:  push    bc
2806   1A48 06 03               ld      b,$03
2807   1A4A 7C          L1A4A:  ld      a,h
2808   1A4B 1F                  rra
2809   1A4C 67                  ld      h,a
2810   1A4D 7D                  ld      a,l
2811   1A4E 1F                  rra
2812   1A4F 6F                  ld      l,a
2813   1A50 05                  dec     b
2814   1A51 C2 4A 1A            jp      nz,$L1A4A
2815   1A54 7C                  ld      a,h
2816   1A55 E6 3F               and     $3f
2817   1A57 F6 20               or      $20
2818   1A59 67                  ld      h,a
2819   1A5A C1                  pop     bc
2820   1A5B C9                  ret
2821   1A5C             
2822   1A5C             ;=============================================================
2823   1A5C             ; Clear 2 rows on the screen (2 vertical lines when rotated)
2824   1A5C 21 00 24    L1A5C:  ld      hl,$2400	; Screen coordinate
2825   1A5F 36 00       L1A5F:  ld      (hl),$00	; Clear it
2826   1A61 23                  inc     hl		; Next byte
2827   1A62 7C                  ld      a,h		; Have we done ...
2828   1A63 FE 40               cp      $40		; ... 2 rows?
2829   1A65 C2 5F 1A            jp      nz,$L1A5F	; No ... keep going
2830   1A68 C9                  ret     		; Out
2831   1A69             
2832   1A69             ;=============================================================
2833   1A69             ; Logically OR a sprite onto the screen
2834   1A69             ; DE = sprite
2835   1A69             ; HL = screen
2836   1A69             ; C = bytes per row
2837   1A69             ; B = number of rows
2838   1A69 C5          L1A69:  push    bc		; Preserve BC
2839   1A6A E5                  push    hl		; Hold for a bit
2840   1A6B 1A          L1A6B:  ld      a,(de)	; From sprite
2841   1A6C B6                  or      (hl)		; OR with screen
2842   1A6D 77                  ld      (hl),a	; Back to screen
2843   1A6E 13                  inc     de		; Next sprite
2844   1A6F 23                  inc     hl		; Next on screen
2845   1A70 0D                  dec     c		; Row done?
2846   1A71 C2 6B 1A            jp      nz,$L1A6B	; No ... do entire row
2847   1A74 E1                  pop     hl		; Original start
2848   1A75 01 20 00            ld      bc,$0020	; Bump HL by ... ; -- POSSIBLE LABEL --
2849   1A78 09                  add     hl,bc		; ... one screen row
2850   1A79 C1                  pop     bc		; Restore
2851   1A7A 05                  dec     b		; Row counter
2852   1A7B C2 69 1A            jp      nz,$L1A69	; Do all rows
2853   1A7E C9                  ret
2854   1A7F             
2855   1A7F             ;=============================================================
2856   1A7F             ; Remove a ship from the players stash and update the
2857   1A7F             ; hold indicators on the screen.
2858   1A7F CD 2E 09    L1A7F:  call    $L092E		; Get last byte from player data
2859   1A82 A7                  and     a		; Is it 0?
2860   1A83 C8                  ret     z		; Skip
2861   1A84 F5                  push    af		; Preserve number remaining
2862   1A85 3D                  dec     a		; Remove a ship from the stash
2863   1A86 77                  ld      (hl),a	; New number of ships
2864   1A87 CD E6 19            call ShowShipsRemaining		; Draw the line of ships
2865   1A8A F1                  pop     af		; Restore number
2866   1A8B 21 01 25    L1A8B:  ld      hl,$2501	; Screen coordinates
2867   1A8E E6 0F               and     $0f		; Make sure it is a digit
2868   1A90 C3 C5 09            jp      $L09C5		; Print number remaining
2869   1A93             
2870   1A93             ;==========================================================
2871   1A93             
2872   1A93 00 00                 .db    $00,$00
2873   1A95             
2874   1A95 00 00 FF B8 L1A95:    .db    $00,$00,$ff,$b8,$fe,$20,$1c,$10,$9e,$00,$20,$1c
2874   1A99 FE 20 1C 10 
2874   1A9D 9E 00 20 1C 
2875   1AA1             
2876   1AA1 30 10 0B 08 L1AA1:    .db    $30,$10,$0b,$08
2877   1AA5 07                    .db    $07
2878   1AA6             
2879   1AA6             ROM_MsgGameOver: ; Text message "GAME OVER PLAYER< >"
2880   1AA6 06 00 0C 04           .db    $06,$00,$0c,$04,$26,$0e,$15,$04,$11,$26,$26,$0f
2880   1AAA 26 0E 15 04 
2880   1AAE 11 26 26 0F 
2881   1AB2 0B 00 18 04           .db    $0b,$00,$18,$04,$11,$24,$26,$25
2881   1AB6 11 24 26 25 
2882   1ABA             
2883   1ABA             ROM_Msg1or2: ; Test message "1 OR 2PLAYERS BUTTON "
2884   1ABA 1B 26 0E 11           .db    $1b,$26,$0e,$11,$26,$1c,$0f,$0b,$00,$18,$04
2884   1ABE 26 1C 0F 0B 
2884   1AC2 00 18 04 
2885   1AC5 11 12 26 01           .db    $11,$12,$26,$01,$14,$13,$13,$0e,$0d,$26
2885   1AC9 14 13 13 0E 
2885   1ACD 0D 26 
2886   1ACF             
2887   1ACF             ROM_MsgOnly1: ; Text Message "ONLY 1PLAYER BUTTON "
2888   1ACF 0E 0D 0B 18           .db    $0e,$0d,$0b,$18,$26,$1b,$0f,$0b,$00,$18,$04,$11,$26,$26
2888   1AD3 26 1B 0F 0B 
2888   1AD7 00 18 04 11 
2888   1ADB 26 26 
2889   1ADD 01 14 13 13           .db    $01,$14,$13,$13,$0e,$0d,$26
2889   1AE1 0E 0D 26 
2890   1AE4             
2891   1AE4             ROM_MsgScore: ; Text message [28 bytes] " SCORE<1> HI-SCORE SCORE<2>"
2892   1AE4 26 12 02 0E           .db    $26,$12,$02,$0e,$11,$04,$24,$1b,$25,$26,$07,$08
2892   1AE8 11 04 24 1B 
2892   1AEC 25 26 07 08 
2893   1AF0 3F 12 02 0E           .db    $3f,$12,$02,$0e,$11,$04,$26,$12,$02,$0e,$11,$04
2893   1AF4 11 04 26 12 
2893   1AF8 02 0E 11 04 
2894   1AFC 24 1C 25 26           .db    $24,$1c,$25,$26
2895   1B00             ;
2896   1B00             ; Coppied to start of RAM ($2000) as initialization
2897   1B00             
2898   1B00             ROM_RAMInit: ; 1B00
2899   1B00 01                    .db    $01
2900   1B01 00                    .db    $00
2901   1B02 00                    .db    $00
2902   1B03 10 00                 .db    $10,$00
2903   1B05 00                    .db    $00
2904   1B06 00                    .db    $00
2905   1B07 00                    .db    $00
2906   1B08 02                    .db    $02
2907   1B09 78                    .db    $78
2908   1B0A 38 78                 .db    $38,$78
2909   1B0C 38 00                 .db    $38,$00
2910   1B0E F8                    .db    $f8
2911   1B0F 00                    .db    $00
2912   1B10             ;
2913   1B10 00          L1B10:    .db    $00
2914   1B11 80                    .db    $80
2915   1B12 00                    .db    $00
2916   1B13 8E                    .db    $8e
2917   1B14 02                    .db    $02
2918   1B15 FF                    .db    $ff
2919   1B16 05                    .db    $05
2920   1B17 0C                    .db    $0c
2921   1B18             ;
2922   1B18             ; Active player descriptor
2923   1B18 60 1C                 .db    $60,$1c
2924   1B1A 20 30                 .db    $20,$30
2925   1B1C 10                    .db    $10
2926   1B1D             ;
2927   1B1D 01                    .db    $01
2928   1B1E 00                    .db    $00
2929   1B1F 00                    .db    $00
2930   1B20 00                    .db    $00
2931   1B21 00                    .db    $00
2932   1B22 00                    .db    $00
2933   1B23 BB                    .db    $bb
2934   1B24 03                    .db    $03
2935   1B25             ;
2936   1B25             ; Active player shot descriptor
2937   1B25 00          L1B25:    .db    $00
2938   1B26 10 90 1C 28           .db    $10,$90,$1c,$28,$30,$01,$04
2938   1B2A 30 01 04 
2939   1B2D             ;
2940   1B2D 00                    .db    $00
2941   1B2E FF                    .db    $ff
2942   1B2F FF                    .db    $ff
2943   1B30 00          L1B30:    .db    $00
2944   1B31 00                    .db    $00
2945   1B32 02          L1B32:    .db    $02
2946   1B33 76                    .db    $76
2947   1B34 04                    .db    $04
2948   1B35 00                    .db    $00
2949   1B36 00                    .db    $00
2950   1B37 00                    .db    $00
2951   1B38 00                    .db    $00
2952   1B39 00                    .db    $00
2953   1B3A 04                    .db    $04
2954   1B3B EE 1C                 .db    $ee,$1c
2955   1B3D 00                    .db    $00
2956   1B3E 00                    .db    $00
2957   1B3F 03                    .db    $03
2958   1B40 00          L1B40:    .db    $00
2959   1B41 00                    .db    $00
2960   1B42 00                    .db    $00
2961   1B43 B6                    .db    $b6
2962   1B44 04                    .db    $04
2963   1B45 00                    .db    $00
2964   1B46 00                    .db    $00
2965   1B47 01 00 1D              .db    $01,$00,$1d
2966   1B4A 04                    .db    $04
2967   1B4B E2 1C 00              .db    $e2,$1c,$00
2968   1B4E 00                    .db    $00
2969   1B4F 03                    .db    $03
2970   1B50 00          L1B50:    .db    $00
2971   1B51 00                    .db    $00
2972   1B52 00                    .db    $00
2973   1B53 82                    .db    $82
2974   1B54 06 00                 .db    $06,$00
2975   1B56 00                    .db    $00
2976   1B57 01 06 1D              .db    $01,$06,$1d
2977   1B5A 04                    .db    $04
2978   1B5B D0                    .db    $d0
2979   1B5C 1C                    .db    $1c
2980   1B5D 00                    .db    $00
2981   1B5E 00                    .db    $00
2982   1B5F 03                    .db    $03
2983   1B60 FF                    .db    $ff
2984   1B61 00                    .db    $00
2985   1B62             ;
2986   1B62             ; Exploding alien descriptor
2987   1B62 C0 1C                 .db    $c0,$1c
2988   1B64 00 00                 .db    $00,$00
2989   1B66 10                    .db    $10
2990   1B67             ;
2991   1B67 21                    .db    $21
2992   1B68 01 00 30              .db    $01,$00,$30
2993   1B6B 00                    .db    $00
2994   1B6C 12                    .db    $12
2995   1B6D 00                    .db    $00
2996   1B6E 00                    .db    $00
2997   1B6F 00                    .db    $00
2998   1B70 0F          L1B70:    .db    $0f
2999   1B71 0B                    .db    $0b
3000   1B72 00                    .db    $00
3001   1B73 18 26                 .db    $18,$26
3002   1B75 0F                    .db    $0f
3003   1B76 0B                    .db    $0b
3004   1B77 00                    .db    $00
3005   1B78 18 04                 .db    $18,$04
3006   1B7A 11 24 1B              .db    $11,$24,$1b
3007   1B7D 25                    .db    $25
3008   1B7E FC 00 01              .db    $fc,$00,$01
3009   1B81 FF                    .db    $ff
3010   1B82 FF                    .db    $ff
3011   1B83             ;
3012   1B83 00          L1B83:    .db    $00
3013   1B84 00                    .db    $00
3014   1B85 00                    .db    $00
3015   1B86 20                    .db    $20
3016   1B87             ;
3017   1B87 64                    .db    $64
3018   1B88 1D                    .db    $1d
3019   1B89 D0                    .db    $d0
3020   1B8A 29                    .db    $29
3021   1B8B 18                    .db    $18
3022   1B8C             ;
3023   1B8C 02                    .db    $02
3024   1B8D 54                    .db    $54
3025   1B8E 1D                    .db    $1d
3026   1B8F 00                    .db    $00
3027   1B90 08                    .db    $08
3028   1B91 00                    .db    $00
3029   1B92 06 00                 .db    $06,$00
3030   1B94 00                    .db    $00
3031   1B95 01 40 00              .db    $01,$40,$00
3032   1B98 01 00 00              .db    $01,$00,$00
3033   1B9B 10 9E                 .db    $10,$9e
3034   1B9D 00                    .db    $00
3035   1B9E 20 1C                 .db    $20,$1c
3036   1BA0 00                    .db    $00
3037   1BA1 03                    .db    $03
3038   1BA2 04                    .db    $04
3039   1BA3 78                    .db    $78
3040   1BA4 14                    .db    $14
3041   1BA5 13                    .db    $13
3042   1BA6 08                    .db    $08
3043   1BA7 1A                    .db    $1a
3044   1BA8 3D                    .db    $3d
3045   1BA9 68                    .db    $68
3046   1BAA FC FC 68              .db    $fc,$fc,$68
3047   1BAD 3D                    .db    $3d
3048   1BAE 1A                    .db    $1a
3049   1BAF 00                    .db    $00
3050   1BB0             ;
3051   1BB0 00          L1BB0:    .db    $00
3052   1BB1 00                    .db    $00
3053   1BB2 01 B8 98              .db    $01,$b8,$98
3054   1BB5 A0                    .db    $a0
3055   1BB6 1B                    .db    $1b
3056   1BB7 10 FF                 .db    $10,$ff
3057   1BB9 00                    .db    $00
3058   1BBA A0                    .db    $a0
3059   1BBB 1B                    .db    $1b
3060   1BBC 00                    .db    $00
3061   1BBD 00                    .db    $00
3062   1BBE 00                    .db    $00
3063   1BBF 00                    .db    $00
3064   1BC0             
3065   1BC0             ; END OF 0xC0 bytes of RAM MIRROR
3066   1BC0             
3067   1BC0 00          L1BC0:    .db    $00
3068   1BC1 10 00                 .db    $10,$00
3069   1BC3 0E 05                 .db    $0e,$05
3070   1BC5 00                    .db    $00
3071   1BC6 00                    .db    $00
3072   1BC7 00                    .db    $00
3073   1BC8 00                    .db    $00
3074   1BC9 00                    .db    $00
3075   1BCA 07                    .db    $07
3076   1BCB D0                    .db    $d0
3077   1BCC 1C                    .db    $1c
3078   1BCD C8                    .db    $c8
3079   1BCE 9B                    .db    $9b
3080   1BCF 03                    .db    $03
3081   1BD0 00                    .db    $00
3082   1BD1 00                    .db    $00
3083   1BD2 03                    .db    $03
3084   1BD3 04                    .db    $04
3085   1BD4 78                    .db    $78
3086   1BD5 14                    .db    $14
3087   1BD6 0B                    .db    $0b
3088   1BD7 19                    .db    $19
3089   1BD8 3A 6D FA              .db    $3a,$6d,$fa
3090   1BDB FA 6D 3A              .db    $fa,$6d,$3a
3091   1BDE 19                    .db    $19
3092   1BDF 00                    .db    $00
3093   1BE0 00                    .db    $00
3094   1BE1 00                    .db    $00
3095   1BE2 00                    .db    $00
3096   1BE3 00                    .db    $00
3097   1BE4 00                    .db    $00
3098   1BE5 00                    .db    $00
3099   1BE6 00                    .db    $00
3100   1BE7 00                    .db    $00
3101   1BE8 00                    .db    $00
3102   1BE9 01 00 00              .db    $01,$00,$00
3103   1BEC 01                    .db    $01
3104   1BED             ;
3105   1BED 74 1F                 .db    $74,$1f
3106   1BEF             ;
3107   1BEF 00                    .db    $00
3108   1BF0 80                    .db    $80
3109   1BF1 00                    .db    $00
3110   1BF2 00                    .db    $00
3111   1BF3 00                    .db    $00
3112   1BF4 00 00 1C 2F           .db    $00,$00,$1c,$2f
3113   1BF8 00 00 1C 27           .db    $00,$00,$1c,$27
3114   1BFC             
3115   1BFC 00 00 1C 39           .db    $00,$00,$1C,$39
3116   1C00             
3117   1C00             ; END of 256-byte RAM mirror
3118   1C00             
3119   1C00             
3120   1C00             ;<EditorTab name="GameSprites">
3121   1C00             
3122   1C00             ROM_AlienSprites: 
3123   1C00             
3124   1C00             ; Alien sprite type A,B, and C at positions 0
3125   1C00 00 00 39 79           .db    $00,$00,$39,$79,$7a,$6e,$ec,$fa,$fa,$ec,$6e,$7a,$79,$39,$00,$00
3125   1C04 7A 6E EC FA 
3125   1C08 FA EC 6E 7A 
3125   1C0C 79 39 00 00 
3126   1C10 00 00 00 78           .db    $00,$00,$00,$78,$1d,$be,$6c,$3c,$3c,$3c,$6c,$be,$1d,$78,$00,$00
3126   1C14 1D BE 6C 3C 
3126   1C18 3C 3C 6C BE 
3126   1C1C 1D 78 00 00 
3127   1C20 00 00 00 00           .db    $00,$00,$00,$00,$19,$3a,$6d,$fa,$fa,$6d,$3a,$19,$00,$00,$00,$00
3127   1C24 19 3A 6D FA 
3127   1C28 FA 6D 3A 19 
3127   1C2C 00 00 00 00 
3128   1C30             
3129   1C30             ; Alien sprite type A,B, and C at positions 1
3130   1C30 00 00 38 7A           .db    $00,$00,$38,$7a,$7f,$6d,$ec,$fa,$fa,$ec,$6d,$7f,$7a,$38,$00,$00
3130   1C34 7F 6D EC FA 
3130   1C38 FA EC 6D 7F 
3130   1C3C 7A 38 00 00 
3131   1C40 00 00 00 0E           .db    $00,$00,$00,$0e,$18,$be,$6d,$3d,$3c,$3d,$6d,$be,$18,$0e,$00,$00
3131   1C44 18 BE 6D 3D 
3131   1C48 3C 3D 6D BE 
3131   1C4C 18 0E 00 00 
3132   1C50 00 00 00 00           .db    $00,$00,$00,$00,$1a,$3d,$68,$fc,$fc,$68,$3d,$1a,$00,$00,$00,$00
3132   1C54 1A 3D 68 FC 
3132   1C58 FC 68 3D 1A 
3132   1C5C 00 00 00 00 
3133   1C60             
3134   1C60             ROM_PlayerSprite:
3135   1C60 00 00 0F 1F           .db    $00,$00,$0f,$1f,$1f,$1f,$1f,$7f,$ff,$7f,$1f,$1f,$1f,$1f,$0f,$00
3135   1C64 1F 1F 1F 7F 
3135   1C68 FF 7F 1F 1F 
3135   1C6C 1F 1F 0F 00 
3136   1C70             
3137   1C70             ;</EditorTab>
3138   1C70             
3139   1C70 00          L1C70:    .db    $00
3140   1C71 04                    .db    $04
3141   1C72 01 13 03              .db    $01,$13,$03
3142   1C75 07                    .db    $07
3143   1C76 B3                    .db    $b3
3144   1C77 0F                    .db    $0f
3145   1C78 2F                    .db    $2f
3146   1C79 03                    .db    $03
3147   1C7A 2F                    .db    $2f
3148   1C7B 49                    .db    $49
3149   1C7C 04                    .db    $04
3150   1C7D 03                    .db    $03
3151   1C7E 00                    .db    $00
3152   1C7F 01 40 08              .db    $01,$40,$08
3153   1C82 05                    .db    $05
3154   1C83 A3                    .db    $a3
3155   1C84 0A                    .db    $0a
3156   1C85 03                    .db    $03
3157   1C86 5B                    .db    $5b
3158   1C87 0F                    .db    $0f
3159   1C88 27                    .db    $27
3160   1C89 27                    .db    $27
3161   1C8A 0B                    .db    $0b
3162   1C8B 4B                    .db    $4b
3163   1C8C 40                    .db    $40
3164   1C8D 84                    .db    $84
3165   1C8E 11 48 0F              .db    $11,$48,$0f
3166   1C91 99                    .db    $99
3167   1C92 3C                    .db    $3c
3168   1C93 7E                    .db    $7e
3169   1C94 3D                    .db    $3d
3170   1C95 BC                    .db    $bc
3171   1C96 3E 7C                 .db    $3e,$7c
3172   1C98 99                    .db    $99
3173   1C99 27                    .db    $27
3174   1C9A 1B                    .db    $1b
3175   1C9B 1A                    .db    $1a
3176   1C9C 26 0F                 .db    $26,$0f
3177   1C9E 0E 08                 .db    $0e,$08
3178   1CA0 0D                    .db    $0d
3179   1CA1 13                    .db    $13
3180   1CA2 12                    .db    $12
3181   1CA3 28 12       L1CA3:    .db    $28,$12
3182   1CA5 02                    .db    $02
3183   1CA6 0E 11                 .db    $0e,$11
3184   1CA8 04                    .db    $04
3185   1CA9 26 00                 .db    $26,$00
3186   1CAB 03                    .db    $03
3187   1CAC 15                    .db    $15
3188   1CAD 00                    .db    $00
3189   1CAE 0D                    .db    $0d
3190   1CAF 02                    .db    $02
3191   1CB0 04                    .db    $04
3192   1CB1 26 13                 .db    $26,$13
3193   1CB3 00                    .db    $00
3194   1CB4 01 0B 04              .db    $01,$0b,$04
3195   1CB7 28                    .db    $28
3196   1CB8             ;
3197   1CB8 02 10 20 30 L1CB8:    .db    $02,$10,$20,$30
3198   1CBC             
3199   1CBC             
3200   1CBC             ROM_MsgTilt: ; Text message: "TILT"
3201   1CBC 13 08 0B 13           .db    $13,$08,$0b,$13
3202   1CC0             ;
3203   1CC0             ; Alien exploding sprite
3204   1CC0 00 08 49 22           .db    $00,$08,$49,$22,$14,$81,$42,$00,$42,$81,$14,$22,$49,$08,$00,$00
3204   1CC4 14 81 42 00 
3204   1CC8 42 81 14 22 
3204   1CCC 49 08 00 00 
3205   1CD0             ;
3206   1CD0 44                    .db    $44
3207   1CD1 AA                    .db    $aa
3208   1CD2 10 88                 .db    $10,$88
3209   1CD4 54                    .db    $54
3210   1CD5 22 10 AA              .db    $22,$10,$aa
3211   1CD8 44                    .db    $44
3212   1CD9 22 54 88              .db    $22,$54,$88
3213   1CDC 4A          L1CDC:    .db    $4a
3214   1CDD 15                    .db    $15
3215   1CDE BE                    .db    $be
3216   1CDF 3F                    .db    $3f
3217   1CE0 5E                    .db    $5e
3218   1CE1 25                    .db    $25
3219   1CE2 04                    .db    $04
3220   1CE3 FC 04 10              .db    $fc,$04,$10
3221   1CE6 FC 10 20              .db    $fc,$10,$20
3222   1CE9 FC 20 80              .db    $fc,$20,$80
3223   1CEC FC 80 00              .db    $fc,$80,$00
3224   1CEF FE 00                 .db    $fe,$00
3225   1CF1 24                    .db    $24
3226   1CF2 FE 12                 .db    $fe,$12
3227   1CF4 00                    .db    $00
3228   1CF5 FE 00                 .db    $fe,$00
3229   1CF7 48                    .db    $48
3230   1CF8 FE 90                 .db    $fe,$90
3231   1CFA 0F          L1CFA:    .db    $0f
3232   1CFB 0B                    .db    $0b
3233   1CFC 00                    .db    $00
3234   1CFD 29                    .db    $29
3235   1CFE 00                    .db    $00
3236   1CFF 00                    .db    $00
3237   1D00 01 07 01              .db    $01,$07,$01
3238   1D03 01 01 04              .db    $01,$01,$04
3239   1D06 0B                    .db    $0b
3240   1D07 01 06 03              .db    $01,$06,$03
3241   1D0A 01 01 0B              .db    $01,$01,$0b
3242   1D0D 09                    .db    $09
3243   1D0E 02                    .db    $02
3244   1D0F 08                    .db    $08
3245   1D10 02                    .db    $02
3246   1D11 0B                    .db    $0b
3247   1D12 04                    .db    $04
3248   1D13 07                    .db    $07
3249   1D14 0A                    .db    $0a
3250   1D15 05                    .db    $05
3251   1D16 02                    .db    $02
3252   1D17 05                    .db    $05
3253   1D18 04                    .db    $04
3254   1D19 06 07                 .db    $06,$07 
3255   1D1B 08                    .db    $08
3256   1D1C 0A                    .db    $0a
3257   1D1D 06 0A                 .db    $06,$0a
3258   1D1F 03                    .db    $03
3259   1D20 FF          L1D20:    .db    $ff
3260   1D21 0F                    .db    $0f
3261   1D22 FF                    .db    $ff
3262   1D23 1F                    .db    $1f
3263   1D24 FF                    .db    $ff
3264   1D25 3F                    .db    $3f
3265   1D26 FF                    .db    $ff
3266   1D27 7F                    .db    $7f
3267   1D28 FF                    .db    $ff
3268   1D29 FF                    .db    $ff
3269   1D2A FC FF F8              .db    $fc,$ff,$f8
3270   1D2D FF                    .db    $ff
3271   1D2E F0                    .db    $f0
3272   1D2F FF                    .db    $ff
3273   1D30 F0                    .db    $f0
3274   1D31 FF                    .db    $ff
3275   1D32 F0                    .db    $f0
3276   1D33 FF                    .db    $ff
3277   1D34 F0                    .db    $f0
3278   1D35 FF                    .db    $ff
3279   1D36 F0                    .db    $f0
3280   1D37 FF                    .db    $ff
3281   1D38 F0                    .db    $f0
3282   1D39 FF                    .db    $ff
3283   1D3A F0                    .db    $f0
3284   1D3B FF                    .db    $ff
3285   1D3C F8                    .db    $f8
3286   1D3D FF                    .db    $ff
3287   1D3E FC FF FF              .db    $fc,$ff,$ff
3288   1D41 FF                    .db    $ff
3289   1D42 FF                    .db    $ff
3290   1D43 FF                    .db    $ff
3291   1D44 FF                    .db    $ff
3292   1D45 7F                    .db    $7f
3293   1D46 FF                    .db    $ff
3294   1D47 3F                    .db    $3f
3295   1D48 FF                    .db    $ff
3296   1D49 1F                    .db    $1f
3297   1D4A FF                    .db    $ff
3298   1D4B 0F                    .db    $0f
3299   1D4C 05          L1D4C:    .db    $05
3300   1D4D 10 15                 .db    $10,$15
3301   1D4F 30 94                 .db    $30,$94
3302   1D51 97                    .db    $97
3303   1D52 9A                    .db    $9a
3304   1D53 9D                    .db    $9d
3305   1D54 10 05                 .db    $10,$05
3306   1D56 05                    .db    $05
3307   1D57 10 15                 .db    $10,$15
3308   1D59 10 10                 .db    $10,$10
3309   1D5B 05                    .db    $05
3310   1D5C 30 10                 .db    $30,$10
3311   1D5E 10 10                 .db    $10,$10
3312   1D60 05                    .db    $05
3313   1D61 15                    .db    $15
3314   1D62 10 05                 .db    $10,$05
3315   1D64 00                    .db    $00
3316   1D65 00                    .db    $00
3317   1D66 00                    .db    $00
3318   1D67 00                    .db    $00
3319   1D68 04                    .db    $04
3320   1D69 0C                    .db    $0c
3321   1D6A 1E 37                 .db    $1e,$37
3322   1D6C 3E 7C                 .db    $3e,$7c
3323   1D6E 74                    .db    $74
3324   1D6F 7E                    .db    $7e
3325   1D70 7E                    .db    $7e
3326   1D71 74                    .db    $74
3327   1D72 7C                    .db    $7c
3328   1D73 3E 37                 .db    $3e,$37
3329   1D75 1E 0C                 .db    $1e,$0c
3330   1D77 04                    .db    $04
3331   1D78 00                    .db    $00
3332   1D79 00                    .db    $00
3333   1D7A 00                    .db    $00
3334   1D7B 00                    .db    $00
3335   1D7C 00          L1D7C:    .db    $00
3336   1D7D 22 00 A5              .db    $22,$00,$a5
3337   1D80 40                    .db    $40
3338   1D81 08                    .db    $08
3339   1D82 98                    .db    $98
3340   1D83 3D                    .db    $3d
3341   1D84 B6                    .db    $b6
3342   1D85 3C                    .db    $3c
3343   1D86 36 1D                 .db    $36,$1d
3344   1D88 10 48                 .db    $10,$48
3345   1D8A 62                    .db    $62
3346   1D8B B6                    .db    $b6
3347   1D8C 1D                    .db    $1d
3348   1D8D 98                    .db    $98
3349   1D8E 08                    .db    $08
3350   1D8F 42                    .db    $42
3351   1D90 90                    .db    $90
3352   1D91 08                    .db    $08
3353   1D92 00                    .db    $00
3354   1D93 00                    .db    $00
3355   1D94 26 1F                 .db    $26,$1f
3356   1D96 1A                    .db    $1a
3357   1D97 1B                    .db    $1b
3358   1D98 1A                    .db    $1a
3359   1D99 1A                    .db    $1a
3360   1D9A 1B                    .db    $1b
3361   1D9B 1F                    .db    $1f
3362   1D9C 1A                    .db    $1a
3363   1D9D 1D                    .db    $1d
3364   1D9E 1A                    .db    $1a
3365   1D9F 1A                    .db    $1a
3366   1DA0             
3367   1DA0 10          L1DA0:    .db    $10
3368   1DA1 20                    .db    $20
3369   1DA2 30          L1DA2:    .db    $30
3370   1DA3 60                    .db    $60
3371   1DA4 50                    .db    $50
3372   1DA5 48                    .db    $48
3373   1DA6 48                    .db    $48
3374   1DA7 48                    .db    $48
3375   1DA8 40                    .db    $40
3376   1DA9 40                    .db    $40
3377   1DAA 40                    .db    $40
3378   1DAB 0F          L1DAB:    .db    $0f
3379   1DAC 0B                    .db    $0b
3380   1DAD 00                    .db    $00
3381   1DAE 18 12                 .db    $18,$12
3382   1DB0 0F                    .db    $0f
3383   1DB1 00                    .db    $00
3384   1DB2 02                    .db    $02
3385   1DB3 04                    .db    $04
3386   1DB4 26 26                 .db    $26,$26
3387   1DB6 08                    .db    $08
3388   1DB7 0D                    .db    $0d
3389   1DB8 15                    .db    $15
3390   1DB9 00                    .db    $00
3391   1DBA 03                    .db    $03
3392   1DBB 04                    .db    $04
3393   1DBC 11 12 0E              .db    $11,$12,$0e
3394   1DBF 2C                    .db    $2c
3395   1DC0 68                    .db    $68
3396   1DC1 1D                    .db    $1d
3397   1DC2 0C                    .db    $0c
3398   1DC3 2C                    .db    $2c
3399   1DC4 20 1C                 .db    $20,$1c
3400   1DC6 0A                    .db    $0a
3401   1DC7 2C                    .db    $2c
3402   1DC8 40                    .db    $40
3403   1DC9 1C                    .db    $1c
3404   1DCA 08                    .db    $08
3405   1DCB 2C                    .db    $2c
3406   1DCC 00                    .db    $00
3407   1DCD 1C                    .db    $1c
3408   1DCE FF                    .db    $ff
3409   1DCF 0E 2E       L1DCF:    .db    $0e,$2e
3410   1DD1 E0                    .db    $e0
3411   1DD2 1D                    .db    $1d
3412   1DD3 0C                    .db    $0c
3413   1DD4 2E EA                 .db    $2e,$ea
3414   1DD6 1D                    .db    $1d
3415   1DD7 0A                    .db    $0a
3416   1DD8 2E F4                 .db    $2e,$f4
3417   1DDA 1D                    .db    $1d
3418   1DDB 08                    .db    $08
3419   1DDC 2E 99                 .db    $2e,$99
3420   1DDE 1C                    .db    $1c
3421   1DDF FF                    .db    $ff
3422   1DE0 27                    .db    $27
3423   1DE1 38 26                 .db    $38,$26
3424   1DE3 0C                    .db    $0c
3425   1DE4 18 12                 .db    $18,$12
3426   1DE6 13                    .db    $13
3427   1DE7 04                    .db    $04
3428   1DE8 11 18 27              .db    $11,$18,$27
3429   1DEB 1D                    .db    $1d
3430   1DEC 1A                    .db    $1a
3431   1DED 26 0F                 .db    $26,$0f
3432   1DEF 0E 08                 .db    $0e,$08
3433   1DF1 0D                    .db    $0d
3434   1DF2 13                    .db    $13
3435   1DF3 12                    .db    $12
3436   1DF4 27                    .db    $27
3437   1DF5 1C                    .db    $1c
3438   1DF6 1A 26 0F 0E           .db    $1a,$26,$0f,$0e,$08,$0d,$13,$12,$00,$00
3438   1DFA 08 0D 13 12 
3438   1DFE 00 00 
3439   1E00             
3440   1E00             
3441   1E00             ;<EditorTab name="TextSprites">
3442   1E00             
3443   1E00             ROM_TextSprites: ; 8 byte sprites
3444   1E00 00 1F 24 44           .db    $00,$1f,$24,$44,$24,$1f,$00,$00
3444   1E04 24 1F 00 00 
3445   1E08 00 7F 49 49           .db    $00,$7f,$49,$49,$49,$36,$00,$00
3445   1E0C 49 36 00 00 
3446   1E10 00 3E 41 41           .db    $00,$3e,$41,$41,$41,$22,$00,$00
3446   1E14 41 22 00 00 
3447   1E18 00 7F 41 41           .db    $00,$7f,$41,$41,$41,$3e,$00,$00
3447   1E1C 41 3E 00 00 
3448   1E20 00 7F 49 49           .db    $00,$7f,$49,$49,$49,$41,$00,$00
3448   1E24 49 41 00 00 
3449   1E28             
3450   1E28 00 7F 48 48           .db    $00,$7f,$48,$48,$48,$40,$00,$00
3450   1E2C 48 40 00 00 
3451   1E30             ;     00    ; ........
3452   1E30             ;     7f    ; .*******
3453   1E30             ;     48    ; .*..*...
3454   1E30             ;     48    ; .*..*...
3455   1E30             ;     48    ; .*..*...
3456   1E30             ;     40    ; .*......
3457   1E30             ;     00    ; ........
3458   1E30             ;     00    ; ........
3459   1E30             
3460   1E30 00 3E 41 41           .db    $00,$3e,$41,$41,$45,$47,$00,$00
3460   1E34 45 47 00 00 
3461   1E38 00 7F 08 08           .db    $00,$7f,$08,$08,$08,$7f,$00,$00
3461   1E3C 08 7F 00 00 
3462   1E40 00 00 41 7F           .db    $00,$00,$41,$7f,$41,$00,$00,$00
3462   1E44 41 00 00 00 
3463   1E48 00 02 01 01           .db    $00,$02,$01,$01,$01,$7e,$00,$00
3463   1E4C 01 7E 00 00 
3464   1E50 00 7F 08 14           .db    $00,$7f,$08,$14,$22,$41,$00,$00
3464   1E54 22 41 00 00 
3465   1E58 00 7F 01 01           .db    $00,$7f,$01,$01,$01,$01,$00,$00
3465   1E5C 01 01 00 00 
3466   1E60 00 7F 20 18           .db    $00,$7f,$20,$18,$20,$7f,$00,$00
3466   1E64 20 7F 00 00 
3467   1E68 00 7F 10 08           .db    $00,$7f,$10,$08,$04,$7f,$00,$00
3467   1E6C 04 7F 00 00 
3468   1E70 00 3E 41 41           .db    $00,$3e,$41,$41,$41,$3e,$00,$00
3468   1E74 41 3E 00 00 
3469   1E78 00 7F 48 48           .db    $00,$7f,$48,$48,$48,$30,$00,$00
3469   1E7C 48 30 00 00 
3470   1E80 00 3E 41 45           .db    $00,$3e,$41,$45,$42,$3d,$00,$00
3470   1E84 42 3D 00 00 
3471   1E88 00 7F 48 4C           .db    $00,$7f,$48,$4c,$4a,$31,$00,$00
3471   1E8C 4A 31 00 00 
3472   1E90 00 32 49 49           .db    $00,$32,$49,$49,$49,$26,$00,$00
3472   1E94 49 26 00 00 
3473   1E98 00 40 40 7F           .db    $00,$40,$40,$7f,$40,$40,$00,$00
3473   1E9C 40 40 00 00 
3474   1EA0 00 7E 01 01           .db    $00,$7e,$01,$01,$01,$7e,$00,$00
3474   1EA4 01 7E 00 00 
3475   1EA8 00 7C 02 01           .db    $00,$7c,$02,$01,$02,$7c,$00,$00
3475   1EAC 02 7C 00 00 
3476   1EB0 00 7F 02 0C           .db    $00,$7f,$02,$0c,$02,$7f,$00,$00
3476   1EB4 02 7F 00 00 
3477   1EB8 00 63 14 08           .db    $00,$63,$14,$08,$14,$63,$00,$00
3477   1EBC 14 63 00 00 
3478   1EC0 00 60 10 0F           .db    $00,$60,$10,$0f,$10,$60,$00,$00
3478   1EC4 10 60 00 00 
3479   1EC8 00 43 45 49           .db    $00,$43,$45,$49,$51,$61,$00,$00
3479   1ECC 51 61 00 00 
3480   1ED0 00 3E 45 49           .db    $00,$3e,$45,$49,$51,$3e,$00,$00
3480   1ED4 51 3E 00 00 
3481   1ED8 00 00 21 7F           .db    $00,$00,$21,$7f,$01,$00,$00,$00
3481   1EDC 01 00 00 00 
3482   1EE0 00 23 45 49           .db    $00,$23,$45,$49,$49,$31,$00,$00
3482   1EE4 49 31 00 00 
3483   1EE8 00 42 41 49           .db    $00,$42,$41,$49,$59,$66,$00,$00
3483   1EEC 59 66 00 00 
3484   1EF0 00 0C 14 24           .db    $00,$0c,$14,$24,$7f,$04,$00,$00
3484   1EF4 7F 04 00 00 
3485   1EF8 00 72 51 51           .db    $00,$72,$51,$51,$51,$4e,$00,$00
3485   1EFC 51 4E 00 00 
3486   1F00 00 1E 29 49           .db    $00,$1e,$29,$49,$49,$46,$00,$00
3486   1F04 49 46 00 00 
3487   1F08 00 40 47 48           .db    $00,$40,$47,$48,$50,$60,$00,$00
3487   1F0C 50 60 00 00 
3488   1F10 00 36 49 49           .db    $00,$36,$49,$49,$49,$36,$00,$00
3488   1F14 49 36 00 00 
3489   1F18 00 31 49 49           .db    $00,$31,$49,$49,$4a,$3c,$00,$00
3489   1F1C 4A 3C 00 00 
3490   1F20 00 08 14 22           .db    $00,$08,$14,$22,$41,$00,$00,$00
3490   1F24 41 00 00 00 
3491   1F28 00 00 41 22           .db    $00,$00,$41,$22,$14,$08,$00,$00
3491   1F2C 14 08 00 00 
3492   1F30 00 00 00 00           .db    $00,$00,$00,$00,$00,$00,$00,$00
3492   1F34 00 00 00 00 
3493   1F38 00 14 14 14           .db    $00,$14,$14,$14,$14,$14,$00,$00
3493   1F3C 14 14 00 00 
3494   1F40 00 22 14 7F           .db    $00,$22,$14,$7f,$14,$22,$00,$00
3494   1F44 14 22 00 00 
3495   1F48 00 03 04 78           .db    $00,$03,$04,$78,$04,$03,$00,$00
3495   1F4C 04 03 00 00 
3496   1F50             
3497   1F50             ;</EditorTab>
3498   1F50             ;
3499   1F50 24 1B 26 0E           .db    $24,$1b,$26,$0e,$11,$26,$1c,$26
3499   1F54 11 26 1C 26 
3500   1F58 0F 0B 00 18           .db    $0f,$0b,$00,$18,$04,$11,$12,$25
3500   1F5C 04 11 12 25 
3501   1F60 26 26 28 1B           .db    $26,$26,$28,$1b,$26,$0f,$0b,$00
3501   1F64 26 0F 0B 00 
3502   1F68 18 04 11 26           .db    $18,$04,$11,$26,$26,$1b,$26,$02
3502   1F6C 26 1B 26 02 
3503   1F70 0E 08 0D 26           .db    $0e,$08,$0d,$26
3504   1F74             ;
3505   1F74             ; Demo movement commands (1=Right, 2=Left)
3506   1F74 01 01 00 00           .db    $01,$01,$00,$00,$01,$00,$02,$01,$00,$02,$01
3506   1F78 01 00 02 01 
3506   1F7C 00 02 01 
3507   1F7F             ;
3508   1F7F 00                    .db    $00
3509   1F80 60 10 0F 10           .db    $60,$10,$0f,$10,$60,$30,$18,$1a
3509   1F84 60 30 18 1A 
3510   1F88 3D 68 FC FC           .db    $3d,$68,$fc,$fc,$68,$3d,$1a,$00
3510   1F8C 68 3D 1A 00 
3511   1F90             
3512   1F90             
3513   1F90             ROM_MsgInsertCoin: ; Text message "INSERT  COIN"
3514   1F90 08 0D 12 04           .db    $08,$0d,$12,$04,$11,$13,$26,$26
3514   1F94 11 13 26 26 
3515   1F98 02 0E 08 0D           .db    $02,$0e,$08,$0d
3516   1F9C             ;
3517   1F9C 0D 2A 50 1F L1F9C:    .db    $0d,$2a,$50,$1f
3518   1FA0 0A 2A 62 1F L1FA0:    .db    $0a,$2a,$62,$1f,$07,$2a,$e1,$1f
3518   1FA4 07 2A E1 1F 
3519   1FA8 FF                    .db    $ff
3520   1FA9             
3521   1FA9             
3522   1FA9             ROM_MsgCredit: ; Text Message "CREDIT "
3523   1FA9 02 11 04 03           .db    $02,$11,$04,$03,$08,$13,$26
3523   1FAD 08 13 26 
3524   1FB0             ;
3525   1FB0 00 60 10 0F           .db    $00,$60,$10,$0f,$10,$60,$38,$19
3525   1FB4 10 60 38 19 
3526   1FB8 3A 6D FA FA           .db    $3a,$6d,$fa,$fa,$6d,$3a,$19,$00
3526   1FBC 6D 3A 19 00 
3527   1FC0             ;
3528   1FC0 00 20 40 4D           .db    $00,$20,$40,$4d,$50,$20,$00,$00
3528   1FC4 50 20 00 00 
3529   1FC8 00 00 00 FF           .db    $00,$00,$00,$ff,$b8,$ff,$80,$1f
3529   1FCC B8 FF 80 1F 
3530   1FD0 10 97 00 80           .db    $10,$97,$00,$80,$1f,$00,$00,$01
3530   1FD4 1F 00 00 01 
3531   1FD8 D0 22 20 1C           .db    $d0,$22,$20,$1c,$10,$94,$00,$20
3531   1FDC 10 94 00 20 
3532   1FE0             ;
3533   1FE0 1C 28 1C 26           .db    $1c,$28,$1c,$26,$0f,$0b,$00,$18
3533   1FE4 0F 0B 00 18 
3534   1FE8 04 11 12 26           .db    $04,$11,$12,$26,$1c,$26,$02,$0e
3534   1FEC 1C 26 02 0E 
3535   1FF0 08 0D 12              .db    $08,$0d,$12
3536   1FF3             
3537   1FF3             ROM_MsgPush: ; Text message "PUSH "
3538   1FF3 0F 14 12 07           .db    $0f,$14,$12,$07,$26
3538   1FF7 26 
3539   1FF8             ;
3540   1FF8 00 08 08 08           .db    $00,$08,$08,$08,$08,$08,$00,$00
3540   1FFC 08 08 00 00 
3541   2000             
3542   2000                            .end
tasm: Number of errors = 0
