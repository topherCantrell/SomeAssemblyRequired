<pre>
    Just getting started on this.
</pre>
In the Time Pilot game you are in a ship fixed in the center of the screen. The ship’s speed is constant, and you use the joystick to rotate the universe around you. The game control is unique in that the ship pivots to match your 8 way joystick position … and not always in the direction you want it to turn!
<a href="http://en.wikipedia.org/wiki/Time_Pilot">http://en.wikipedia.org/wiki/Time_Pilot</a>
The game uses two Z80 processors -- one for the main game play and one dedicated for the sound. The sound processor uses two AY38910A sound chips just like we saw in the Moon Patrol dig. In this dig we’ll compare and contrast the Time Pilot and Moon Patrol sound software strategies.
The AY38910s are interesting chips. You’ve heard their voices in arcade classics: 1942, Frogger, Burger Time, Crazy Kong, Journey, Jungle Hunt, Scramble, Spy Hunter, Time Pilot, Tron, and Two Tigers to name a few.
A single AY chip has three different voice channels. Each channel can be configured to play a frequency (tone) or noise (explosion fuzz). Each channel has its own absolute volume control, or each volume control can be mapped to a configurable envelope generator.
<a href="http:/en.wikipedia.org/wiki/YM2149">http:/en.wikipedia.org/wiki/YM2149 (AY38910)</a>
Making sound with the AY38910 chip is programmatically easy. There are 16 registers that control the 3 voices, volumes, and envelope generator. You make a siren by sweeping the frequency of a single voice up and down. Start the noise generator and drop the volume over a tenth of a second … you created a gun shot.
The real trick is starting and stopping six different effects (3 voices on 2 chips) and changing all the right registers for each separately evolving effect at the right time. Keeping up with 2 voices of music, a sweeping flying saucer, a missile shot, and an explosion all at the same time – that’s the magic. Let’s see how the Moon Patrol sound processor does it.
<h2>Time Pilot Sound Processor</h2>
The sound processor uses a main loop that processes sound changes on all six voices at about 175Hz. The main loop processes six separate voice managers one at a time and then waits for a clock to reach the next 175Hz tick.
The main CPU sends commands to the sound processor with a hardware interrupt. The sound processor turns off interrupts while processing the six commands and then back on while waiting on the clock. During the wait the interrupt service routine takes the new sound command and schedules it on one of the six voice managers.
The Moon Patrol board uses a scripting language for each of the voices. In contrast, the Time Pilot board defines the various sound effects as pure Z80 code routines. Each sound effect is defined as an initialization routine called on the first tick and then a “continue” routine every tick until the effect returns an “I am done” status.
Each sound effect can be scheduled on any of the voice managers. Each voice manager has its own voice channel and its own area of state variables accessed indirectly by the sound snippets. Thus it is possible to start the same sound effect on all six channels at the same time.
Talk about the scheduling algorithm … commands with priorities … how to stop commands.
Talk about the music scripting.
